{"version":3,"file":"base.spec.js","sourceRoot":"","sources":["../src/base.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { describe, it, expect } from 'vitest'\nimport { ensureDirSync, pathExistsSync } from 'fs-extra'\nimport { join } from 'node:path'\nimport BaseClass from './base.js'\n\ndescribe('BaseClass', () => {\n    it('should be able to create BaseClass with options', () => {\n        const instance = new BaseClass({\n            baselineFolder: './subfolder//../baseline',\n            screenshotPath: './../my_folder//screenshots',\n        })\n        expect(instance.folders.actualFolder).toBe('../my_folder/screenshots/actual')\n        expect(instance.folders.baselineFolder).toBe('baseline')\n        expect(instance.folders.diffFolder).toBe('../my_folder/screenshots/diff')\n    })\n\n    it('should be able to create baselineFolder with a function', () => {\n        const options = {\n            baseline: './subfolder//../baseline',\n            screenshot: './../my_folder//screenshots',\n        }\n        const setPath = (folderPath: any) => {\n            return folderPath\n        }\n        const instance = new BaseClass({\n            baselineFolder: setPath(options.baseline),\n            screenshotPath: setPath(options.screenshot),\n        })\n        expect(instance.folders.actualFolder).toBe('../my_folder/screenshots/actual')\n        expect(instance.folders.baselineFolder).toBe('baseline')\n        expect(instance.folders.diffFolder).toBe('../my_folder/screenshots/diff')\n    })\n\n    it('should be able to create BaseClass with default options', () => {\n        const instance = new BaseClass({})\n        expect(instance.folders.actualFolder).toBe('.tmp/actual')\n        expect(instance.folders.baselineFolder).toBe('wic/baseline/')\n        expect(instance.folders.diffFolder).toBe('.tmp/diff')\n    })\n\n    it('should remove the actual and diff folder if this is needed', () => {\n    // Create the folders\n        const actual = join(process.cwd(), '/.tmp/actual')\n        const diff = join(process.cwd(), '/.tmp/diff')\n        ensureDirSync(actual)\n        ensureDirSync(diff)\n\n        expect(pathExistsSync(actual)).toEqual(true)\n        expect(pathExistsSync(diff)).toEqual(true)\n\n        expect(pathExistsSync(actual)).toEqual(false)\n        expect(pathExistsSync(diff)).toEqual(false)\n    })\n})\n"]}