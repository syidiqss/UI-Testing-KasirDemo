{"version":3,"file":"getAndroidStatusAddressToolBarHeight.test.js","sourceRoot":"","sources":["../../src/clientSideScripts/getAndroidStatusAddressToolBarHeight.test.ts"],"names":[],"mappings":"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","sourcesContent":["// @vitest-environment jsdom\n\nimport { describe, it, expect } from 'vitest'\nimport { ANDROID_OFFSETS } from '../helpers/constants.js'\nimport { ANDROID_DEVICES, NAVIGATOR_APP_VERSIONS, CONFIGURABLE } from '../mocks/mocks.js'\nimport getAndroidStatusAddressToolBarOffsets from './getAndroidStatusAddressToolBarOffsets.js'\n\ndescribe('getAndroidStatusAddressToolBarOffsets', () => {\n    it('should get the android status, address and toolbar height with only a major version in the navigator', () => {\n        setEnvironment('ANDROID', 9, 'NEXUS_5X')\n\n        expect(getAndroidStatusAddressToolBarOffsets(ANDROID_OFFSETS, { isHybridApp: false, isLandscape: false })).toMatchSnapshot()\n    })\n\n    it('should get the android status, address and toolbar height with major and minor version in the navigator', () => {\n        setEnvironment('ANDROID', 8, 'NEXUS_5X')\n\n        expect(getAndroidStatusAddressToolBarOffsets(ANDROID_OFFSETS, { isHybridApp: false, isLandscape: false })).toMatchSnapshot()\n    })\n\n    it('should get the android status, address and toolbar height with major, minor and patch version in the navigator', () => {\n        setEnvironment('ANDROID', 7, 'NEXUS_5X')\n\n        expect(getAndroidStatusAddressToolBarOffsets(ANDROID_OFFSETS, { isHybridApp: false, isLandscape: false })).toMatchSnapshot()\n    })\n\n    it('should set the default toolbar height when the toolbar height will become negative', () => {\n        setEnvironment('ANDROID', 7, 'NEXUS_5X_INNER_HEIGHT')\n\n        expect(getAndroidStatusAddressToolBarOffsets(ANDROID_OFFSETS, { isHybridApp: true, isLandscape: false })).toMatchSnapshot()\n    })\n\n    it('should set the dimensions properly for a device in landscape mode', () => {\n        setEnvironment('ANDROID', 7, 'NEXUS_5X')\n\n        expect(getAndroidStatusAddressToolBarOffsets(ANDROID_OFFSETS, { isHybridApp: true, isLandscape: true })).toMatchSnapshot()\n    })\n\n    it('should set the dimensions properly for a table in landscape mode', () => {\n        setEnvironment('ANDROID', 7, 'TABLET_WIDTH')\n\n        expect(getAndroidStatusAddressToolBarOffsets(ANDROID_OFFSETS, { isHybridApp: true, isLandscape: true })).toMatchSnapshot()\n    })\n})\n\n/**\n * Set the environment for the test\n */\nfunction setEnvironment(os: string, version: number, deviceType: string) {\n    // @ts-ignore\n    Object.defineProperty(navigator, 'appVersion', { value: NAVIGATOR_APP_VERSIONS[os][version], ...CONFIGURABLE })\n    // @ts-ignore\n    Object.defineProperty(window.screen, 'width', { value: ANDROID_DEVICES[deviceType].width, ...CONFIGURABLE })\n    // @ts-ignore\n    Object.defineProperty(window.screen, 'height', { value: ANDROID_DEVICES[deviceType].height, ...CONFIGURABLE })\n    // @ts-ignore\n    Object.defineProperty(window, 'innerWidth', { value: ANDROID_DEVICES[deviceType].innerWidth, ...CONFIGURABLE })\n    // @ts-ignore\n    Object.defineProperty(window, 'innerHeight', { value: ANDROID_DEVICES[deviceType].innerHeight, ...CONFIGURABLE })\n}\n"]}