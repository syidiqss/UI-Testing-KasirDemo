{"version":3,"file":"getElementPositionTopScreenNativeMobile.test.js","sourceRoot":"","sources":["../../src/clientSideScripts/getElementPositionTopScreenNativeMobile.test.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAEA,iCAA6D;AAC7D,8CAA6D;AAC7D,2GAAsG;AAEtG,IAAA,iBAAQ,EAAC,yCAAyC,EAAE;IAChD,IAAA,mBAAU,EAAC;QACP,OAAO,CAAC,SAAS,CAAC,qBAAqB,GAAG,WAAE,CAAC,EAAE,CAAC;YAC5C,OAAO;gBACH,KAAK,EAAE,GAAG;gBACV,MAAM,EAAE,GAAG;gBACX,GAAG,EAAE,EAAE;gBACP,IAAI,EAAE,GAAG;gBACT,MAAM,EAAE,CAAC;gBACT,KAAK,EAAE,EAAE;aACZ,CAAA;QACL,CAAC,CAAQ,CAAA;QACT,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,OAAO,GAAG,oCAAoC,GAAG,QAAQ,CAAA;IACvF,CAAC,CAAC,CAAA;IAEF,IAAA,WAAE,EAAC,+EAA+E,EAAE;QAChF,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,aAAa,aAAI,KAAK,EAAE,sBAAW,CAAC,MAAM,CAAC,WAAW,IAAK,uBAAY,EAAG,CAAA;QAExG,IAAA,eAAM,EACF,IAAA,oFAAuC,EAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAE,EAAE;YAC1E,WAAW,EAAE,KAAK;YAClB,QAAQ,EAAE,CAAC;YACX,YAAY,EAAE,sBAAW,CAAC,MAAM,CAAC,MAAM;YACvC,WAAW,EAAE,sBAAW,CAAC,MAAM,CAAC,KAAK;YACrC,YAAY,EAAE,sBAAW,CAAC,MAAM,CAAC,OAAO;YACxC,yBAAyB,EAAE,EAAE;SAChC,CAAC,CACL,CAAC,eAAe,EAAE,CAAA;IACvB,CAAC,CAAC,CAAA;IAEF,IAAA,WAAE,EAAC,sFAAsF,EAAE;QACvF,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,aAAa,aAAI,KAAK,EAAE,sBAAW,CAAC,MAAM,CAAC,MAAM,IAAK,uBAAY,EAAG,CAAA;QAEnG,IAAA,eAAM,EACF,IAAA,oFAAuC,EAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAE,EAAE;YAC1E,WAAW,EAAE,KAAK;YAClB,QAAQ,EAAE,CAAC;YACX,YAAY,EAAE,sBAAW,CAAC,MAAM,CAAC,MAAM;YACvC,WAAW,EAAE,sBAAW,CAAC,MAAM,CAAC,KAAK;YACrC,YAAY,EAAE,sBAAW,CAAC,MAAM,CAAC,OAAO;YACxC,yBAAyB,EAAE,EAAE;SAChC,CAAC,CACL,CAAC,eAAe,EAAE,CAAA;IACvB,CAAC,CAAC,CAAA;IAEF,IAAA,WAAE,EAAC,uFAAuF,EAAE;QACxF,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,aAAa,aAAI,KAAK,EAAE,sBAAW,CAAC,MAAM,CAAC,KAAK,IAAK,uBAAY,EAAG,CAAA;QAElG,IAAA,eAAM,EACF,IAAA,oFAAuC,EAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAE,EAAE;YAC1E,WAAW,EAAE,IAAI;YACjB,QAAQ,EAAE,EAAE;YACZ,YAAY,EAAE,sBAAW,CAAC,MAAM,CAAC,WAAW;YAC5C,WAAW,EAAE,sBAAW,CAAC,MAAM,CAAC,KAAK;YACrC,YAAY,EAAE,sBAAW,CAAC,MAAM,CAAC,OAAO;YACxC,yBAAyB,EAAE,EAAE;SAChC,CAAC,CACL,CAAC,eAAe,EAAE,CAAA;IACvB,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAA","sourcesContent":["// @vitest-environment jsdom\n\nimport { describe, it, expect, beforeEach, vi } from 'vitest'\nimport { IOS_DEVICES, CONFIGURABLE } from '../mocks/mocks.js'\nimport { getElementPositionTopScreenNativeMobile } from './getElementPositionTopScreenNativeMobile.js'\n\ndescribe('getElementPositionTopScreenNativeMobile', () => {\n    beforeEach(() => {\n        Element.prototype.getBoundingClientRect = vi.fn(() => {\n            return {\n                width: 120,\n                height: 120,\n                top: 10,\n                left: 100,\n                bottom: 5,\n                right: 12,\n            }\n        }) as any\n        document.body.innerHTML = '<div>' + '  <span id=\"username\">Hello</span>' + '</div>'\n    })\n\n    it('should get the element position to the top of the screen for a mobile browser', () => {\n        Object.defineProperty(window, 'innerHeight', { value: IOS_DEVICES.IPHONE.innerHeight, ...CONFIGURABLE })\n\n        expect(\n            getElementPositionTopScreenNativeMobile(document.querySelector('#username')!, {\n                isLandscape: false,\n                safeArea: 0,\n                screenHeight: IOS_DEVICES.IPHONE.height,\n                screenWidth: IOS_DEVICES.IPHONE.width,\n                sideBarWidth: IOS_DEVICES.IPHONE.sideBar,\n                statusBarAddressBarHeight: 94,\n            }),\n        ).toMatchSnapshot()\n    })\n\n    it('should get the element position to the top of the screen for an app in portrait mode', () => {\n        Object.defineProperty(window, 'innerHeight', { value: IOS_DEVICES.IPHONE.height, ...CONFIGURABLE })\n\n        expect(\n            getElementPositionTopScreenNativeMobile(document.querySelector('#username')!, {\n                isLandscape: false,\n                safeArea: 0,\n                screenHeight: IOS_DEVICES.IPHONE.height,\n                screenWidth: IOS_DEVICES.IPHONE.width,\n                sideBarWidth: IOS_DEVICES.IPHONE.sideBar,\n                statusBarAddressBarHeight: 94,\n            }),\n        ).toMatchSnapshot()\n    })\n\n    it('should get the element position to the top of the screen for an app in landscape mode', () => {\n        Object.defineProperty(window, 'innerHeight', { value: IOS_DEVICES.IPHONE.width, ...CONFIGURABLE })\n\n        expect(\n            getElementPositionTopScreenNativeMobile(document.querySelector('#username')!, {\n                isLandscape: true,\n                safeArea: 44,\n                screenHeight: IOS_DEVICES.IPHONE.innerHeight,\n                screenWidth: IOS_DEVICES.IPHONE.width,\n                sideBarWidth: IOS_DEVICES.IPHONE.sideBar,\n                statusBarAddressBarHeight: 94,\n            }),\n        ).toMatchSnapshot()\n    })\n})\n"]}