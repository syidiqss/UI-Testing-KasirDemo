{"version":3,"file":"getIosStatusAddressToolBarOffsets.js","sourceRoot":"","sources":["../../src/clientSideScripts/getIosStatusAddressToolBarOffsets.ts"],"names":[],"mappings":"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","sourcesContent":["import type { StatusAddressToolBarOffsets } from './statusAddressToolBarOffsets.interfaces'\nimport type { IosOffsets } from '../helpers/constants.interfaces'\n\n/**\n * Get the current height of the iOS status and address bar\n */\nexport default function getIosStatusAddressToolBarOffsets(\n    iosOffsets: IosOffsets,\n    isLandscape: boolean,\n): StatusAddressToolBarOffsets {\n    // 1. Determine screen width/height to determine the current iPhone/iPad offset data\n    //    For data on the screen sizes check the constants.ts-file\n    const { width, height } = window.screen\n    const { innerHeight } = window\n    const isIphone = width < 1024 && height < 1024\n    const deviceType = isIphone ? 'IPHONE' : 'IPAD'\n    const orientationType = isLandscape ? 'LANDSCAPE' : 'PORTRAIT'\n    const defaultPortraitHeight = isIphone ? 667 : 1024\n    const portraitHeight = width > height ? width : height\n    // Not sure if it's a bug, but in Landscape mode the height is the width\n    const deviceHeight = isLandscape ? width : height\n    const deviceWidth = isLandscape ? height : width\n    const offsetPortraitHeight =\n        Object.keys(iosOffsets[deviceType]).indexOf(portraitHeight.toString()) > -1 ? portraitHeight : defaultPortraitHeight\n    const currentOffsets = iosOffsets[deviceType][offsetPortraitHeight][orientationType]\n    const osVersion = parseInt(navigator.appVersion.match(/(?:OS |Version\\/)(\\d+)(?:_|\\.)(\\d+)(?:_|\\.)?(\\d+)?/)![1], 10)\n\n    // 2. Get the statusbar height\n    let statusBarHeight = currentOffsets.STATUS_BAR\n    let isIpadPro129FirstGeneration = false\n    let safeArea = currentOffsets.SAFE_AREA\n    /**\n   * Dirty little hack, but the status bar of the iPad Pro (12.9 inch) (1st generation)\n   * has a status bar of 20px I wanted the data to be as generic as possible, so I added this hack\n   */\n    if (\n        (deviceHeight === 1366 || deviceWidth === 1366) &&\n        deviceType === 'IPAD' &&\n        innerHeight + currentOffsets.ADDRESS_BAR + currentOffsets.STATUS_BAR > deviceHeight\n    ) {\n        statusBarHeight = 20\n        isIpadPro129FirstGeneration = true\n    }\n    /**\n   * Dirty little hack for iPhone XSMax|XR|11|11ProMax for iOS 13. The status bar is 44 when in\n   * portrait mode and the safe area is 44 when in landscape mode\n   */\n    if ((deviceHeight === 896 || deviceWidth === 896) && deviceType === 'IPHONE' && osVersion === 13) {\n        if (isLandscape) {\n            safeArea = 44\n        } else {\n            statusBarHeight = 44\n        }\n    }\n    // 3. Determine the address bar height\n    //    Since iOS 15 the address bar for iPhones is at the bottom by default\n    //    This is also what we assume because we can't determine it from the\n    //    web context\n    const addressBarOnTop = (!isLandscape && isIphone && osVersion < 15) || isLandscape || !isIphone\n    const statusAddressBarHeight = statusBarHeight + (addressBarOnTop ? currentOffsets.ADDRESS_BAR : 0)\n    // 4. Determine the toolbar offsets\n    //    In Landscape mode the toolbar is hidden by default and we need to add\n    //    home bar data\n    const toolBarHeight = height - innerHeight - statusAddressBarHeight\n    const toolBarOffsets =\n        isLandscape || toolBarHeight <= 0\n            ? // The iPad Pro (12.9 inch) (1st generation) doesn't have a home bar\n            isIpadPro129FirstGeneration\n                ? { height: 0, width: 0, x: 0, y: 0 }\n                : currentOffsets.HOME_BAR\n            : {\n                height: toolBarHeight,\n                width: deviceWidth,\n                x: 0,\n                y: height - toolBarHeight,\n            }\n    // 5. Return the sidebar offsets\n    const sideBarOffsets =\n        isLandscape && !isIphone\n            ? {\n                height: deviceHeight - statusAddressBarHeight,\n                width: deviceWidth - document.documentElement.scrollWidth,\n                x: 0,\n                y: statusAddressBarHeight,\n            }\n            : { height: 0, width: 0, x: 0, y: 0 }\n\n    // 6. Return the offsets\n    return {\n        safeArea,\n        screenHeight: deviceHeight,\n        screenWidth: deviceWidth,\n        // We only have a side bar with iPads and in landscape mode\n        sideBar: sideBarOffsets,\n        statusAddressBar: {\n            height: statusAddressBarHeight,\n            width: deviceWidth,\n            x: 0,\n            y: 0,\n        },\n        toolBar: toolBarOffsets,\n    }\n}\n"]}