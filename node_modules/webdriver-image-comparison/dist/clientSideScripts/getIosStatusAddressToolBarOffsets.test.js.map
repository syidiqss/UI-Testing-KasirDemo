{"version":3,"file":"getIosStatusAddressToolBarOffsets.test.js","sourceRoot":"","sources":["../../src/clientSideScripts/getIosStatusAddressToolBarOffsets.test.ts"],"names":[],"mappings":"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","sourcesContent":["// @vitest-environment jsdom\n\nimport { describe, it, expect } from 'vitest'\nimport { IOS_DEVICES, NAVIGATOR_APP_VERSIONS, CONFIGURABLE } from '../mocks/mocks.js'\nimport getIosStatusAddressToolBarOffsets from './getIosStatusAddressToolBarOffsets.js'\nimport { IOS_OFFSETS } from '../helpers/constants.js'\n\ndescribe('getIosStatusAddressToolBarOffsets', () => {\n    it('should get the correct status, address and toolbar height for a default iPhone with iOS 14 in Portrait mode', () => {\n        setEnvironment('IOS', 14, 'IPHONE')\n\n        expect(getIosStatusAddressToolBarOffsets(IOS_OFFSETS, false)).toMatchSnapshot()\n    })\n\n    it('should get the correct status, address and toolbar height for a default iPhone with iOS 14 in landscape mode', () => {\n        setEnvironment('IOS', 14, 'IPHONE')\n\n        expect(getIosStatusAddressToolBarOffsets(IOS_OFFSETS, true)).toMatchSnapshot()\n    })\n\n    it('should get the correct status, address and toolbar height for a default iPhone with iOS 15 in portrait mode', () => {\n        setEnvironment('IOS', 15, 'IPHONE_X')\n\n        expect(getIosStatusAddressToolBarOffsets(IOS_OFFSETS, false)).toMatchSnapshot()\n    })\n\n    it('should get the correct status, address and toolbar height for a default iPhone with iOS 15 in landscape mode', () => {\n        setEnvironment('IOS', 15, 'IPHONE_X')\n\n        expect(getIosStatusAddressToolBarOffsets(IOS_OFFSETS, true)).toMatchSnapshot()\n    })\n\n    it('should get the correct status bar height for an iPhone 11 with iOS 13 to validate the iPhone 11 hack', () => {\n        setEnvironment('IOS', 13, 'IPHONE_11')\n\n        expect(getIosStatusAddressToolBarOffsets(IOS_OFFSETS, false)).toMatchSnapshot()\n    })\n\n    it('should get the correct status bar height for an iPhone 11 with iOS 13 to validate the iPhone 11 hack in landscape mode', () => {\n        setEnvironment('IOS', 13, 'IPHONE_11')\n\n        expect(getIosStatusAddressToolBarOffsets(IOS_OFFSETS, true)).toMatchSnapshot()\n    })\n\n    it('should get the correct status bar height for an iPhone 11 with iOS 15', () => {\n        setEnvironment('IOS', 15, 'IPHONE_11')\n\n        expect(getIosStatusAddressToolBarOffsets(IOS_OFFSETS, false)).toMatchSnapshot()\n    })\n\n    it('should get the correct status, address and toolbar height for an iPhone with extreme not known dimensions', () => {\n        setEnvironment('IOS', 15, 'IPHONE_HEIGHT')\n\n        expect(getIosStatusAddressToolBarOffsets(IOS_OFFSETS, false)).toMatchSnapshot()\n    })\n\n    it('should get the correct status, address and toolbar height for an iPad', () => {\n        setEnvironment('IOS', 15, 'IPAD')\n\n        expect(getIosStatusAddressToolBarOffsets(IOS_OFFSETS, false)).toMatchSnapshot()\n    })\n\n    it('should get the correct status, address and toolbar height for an iPad with big sizes', () => {\n        setEnvironment('IOS', 15, 'IPAD_BIG_SIZE')\n\n        expect(getIosStatusAddressToolBarOffsets(IOS_OFFSETS, false)).toMatchSnapshot()\n    })\n\n    it('should get the correct status, address and toolbar height for an iPad in landscape mode', () => {\n        setEnvironment('IOS', 15, 'IPAD_LANDSCAPE')\n\n        expect(getIosStatusAddressToolBarOffsets(IOS_OFFSETS, true)).toMatchSnapshot()\n    })\n\n    it('should get the correct status, address and toolbar height for the iPad Pro 12.9 2017 hack in landscape mode', () => {\n        setEnvironment('IOS', 15, 'IPAD_PRO_LANDSCAPE')\n\n        expect(getIosStatusAddressToolBarOffsets(IOS_OFFSETS, true)).toMatchSnapshot()\n    })\n})\n\n/**\n * Set the environment for the test\n */\nfunction setEnvironment(os: string, version: number, deviceType: string) {\n    // @ts-ignore\n    Object.defineProperty(navigator, 'appVersion', { value: NAVIGATOR_APP_VERSIONS[os][version], ...CONFIGURABLE })\n    // @ts-ignore\n    Object.defineProperty(window.screen, 'width', { value: IOS_DEVICES[deviceType].width, ...CONFIGURABLE })\n    // @ts-ignore\n    Object.defineProperty(global.document, 'documentElement', {\n        // @ts-ignore\n        value: { scrollWidth: IOS_DEVICES[deviceType].scrollWidth },\n        ...CONFIGURABLE,\n    })\n    // @ts-ignore\n    Object.defineProperty(window.screen, 'height', { value: IOS_DEVICES[deviceType].height, ...CONFIGURABLE })\n    // @ts-ignore\n    Object.defineProperty(window, 'innerWidth', { value: IOS_DEVICES[deviceType].innerWidth, ...CONFIGURABLE })\n    // @ts-ignore\n    Object.defineProperty(window, 'innerHeight', { value: IOS_DEVICES[deviceType].innerHeight, ...CONFIGURABLE })\n}\n"]}