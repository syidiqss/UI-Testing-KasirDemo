{"version":3,"file":"getScreenDimensions.js","sourceRoot":"","sources":["../../src/clientSideScripts/getScreenDimensions.ts"],"names":[],"mappings":";;AAKA,SAAwB,mBAAmB;IACvC,IAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAA;IAC1B,IAAM,IAAI,GAAG,QAAQ,CAAC,eAAe,CAAA;IAErC,IAAM,cAAc,GAAG;QACnB,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY;QAC3C,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY;KAC9C,CAAA;IAED,IAAM,cAAc,GAAG;QACnB,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY;QAC3C,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW;QACzC,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY;QAC3C,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW;QACzC,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY;KAC9C,CAAA;IAED,IAAM,gBAAgB,GAAG;QACrB,UAAU,EAAE,MAAM,CAAC,UAAU;QAC7B,WAAW,EAAE,MAAM,CAAC,WAAW;QAC/B,WAAW,EAAE,MAAM,CAAC,UAAU,CAAC,0BAA0B,CAAC,CAAC,OAAO;QAClE,WAAW,EAAE,MAAM,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW;QACxF,UAAU,EAAE,MAAM,CAAC,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU;QACpF,gBAAgB,EAAE,MAAM,CAAC,gBAAgB;QACzC,WAAW,EAAE,MAAM,CAAC,MAAM,CAAC,KAAK;QAChC,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM;KACrC,CAAA;IAED,OAAO;QACH,UAAU,EAAE;YACR,IAAI,EAAE,cAAc;YACpB,IAAI,EAAE,cAAc;YACpB,MAAM,EAAE,gBAAgB;SAC3B;KACJ,CAAA;AACL,CAAC;AAnCD,sCAmCC","sourcesContent":["import type { ScreenDimensions } from './screenDimensions.interfaces'\n\n/**\n * Get all the screen dimensions\n */\nexport default function getScreenDimensions(): ScreenDimensions {\n    const body = document.body\n    const html = document.documentElement\n\n    const bodyDimensions = {\n        scrollHeight: !body ? 0 : body.scrollHeight,\n        offsetHeight: !body ? 0 : body.offsetHeight,\n    }\n\n    const htmlDimensions = {\n        clientHeight: !html ? 0 : html.clientHeight,\n        clientWidth: !html ? 0 : html.clientWidth,\n        scrollHeight: !html ? 0 : html.scrollHeight,\n        scrollWidth: !html ? 0 : html.scrollWidth,\n        offsetHeight: !html ? 0 : html.offsetHeight,\n    }\n\n    const windowDimensions = {\n        innerWidth: window.innerWidth,\n        innerHeight: window.innerHeight,\n        isLandscape: window.matchMedia('(orientation: landscape)').matches,\n        outerHeight: window.outerHeight === 0 ? htmlDimensions.clientHeight : window.outerHeight,\n        outerWidth: window.outerWidth === 0 ? htmlDimensions.clientWidth : window.outerWidth,\n        devicePixelRatio: window.devicePixelRatio,\n        screenWidth: window.screen.width,\n        screenHeight: window.screen.height,\n    }\n\n    return {\n        dimensions: {\n            body: bodyDimensions,\n            html: htmlDimensions,\n            window: windowDimensions,\n        },\n    }\n}\n"]}