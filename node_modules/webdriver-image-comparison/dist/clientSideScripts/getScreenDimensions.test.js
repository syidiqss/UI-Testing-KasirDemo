"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var vitest_1 = require("vitest");
var mocks_js_1 = require("../mocks/mocks.js");
var getScreenDimensions_js_1 = __importDefault(require("./getScreenDimensions.js"));
(0, vitest_1.describe)('getScreenDimensions', function () {
    (0, vitest_1.it)('should get the needed screen dimensions', function () {
        Object.defineProperty(window, 'matchMedia', __assign({ value: vitest_1.vi.fn().mockImplementation(function () { return ({
                matches: true,
            }); }) }, mocks_js_1.CONFIGURABLE));
        (0, vitest_1.expect)((0, getScreenDimensions_js_1.default)()).toMatchSnapshot();
    });
    (0, vitest_1.it)('should get the needed screen dimensions if the outerHeight and outerWidth are set to 0', function () {
        Object.defineProperty(window, 'outerHeight', { value: 0 });
        Object.defineProperty(window, 'outerWidth', { value: 0 });
        Object.defineProperty(document.documentElement, 'clientHeight', { value: 1234 });
        Object.defineProperty(document.documentElement, 'clientWidth', { value: 4321 });
        Object.defineProperty(window, 'matchMedia', __assign({ value: vitest_1.vi.fn().mockImplementation(function () { return ({
                matches: false,
            }); }) }, mocks_js_1.CONFIGURABLE));
        (0, vitest_1.expect)((0, getScreenDimensions_js_1.default)()).toMatchSnapshot();
    });
    (0, vitest_1.it)('should return zeroed dimensions if the document attributes are null', function () {
        Object.defineProperty(document, 'body', { value: null });
        Object.defineProperty(document, 'documentElement', { value: null });
        Object.defineProperty(window, 'matchMedia', __assign({ value: vitest_1.vi.fn().mockImplementation(function () { return ({
                matches: false,
            }); }) }, mocks_js_1.CONFIGURABLE));
        (0, vitest_1.expect)((0, getScreenDimensions_js_1.default)()).toMatchSnapshot();
    });
});
//# sourceMappingURL=getScreenDimensions.test.js.map