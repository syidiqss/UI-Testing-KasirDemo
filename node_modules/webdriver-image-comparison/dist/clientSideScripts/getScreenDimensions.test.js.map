{"version":3,"file":"getScreenDimensions.test.js","sourceRoot":"","sources":["../../src/clientSideScripts/getScreenDimensions.test.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAEA,iCAAiD;AACjD,8CAAgD;AAChD,oFAA0D;AAE1D,IAAA,iBAAQ,EAAC,qBAAqB,EAAE;IAC5B,IAAA,WAAE,EAAC,yCAAyC,EAAE;QAC1C,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,YAAY,aACtC,KAAK,EAAE,WAAE,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,cAAM,OAAA,CAAC;gBACrC,OAAO,EAAE,IAAI;aAChB,CAAC,EAFsC,CAEtC,CAAC,IACA,uBAAY,EACjB,CAAA;QACF,IAAA,eAAM,EAAC,IAAA,gCAAmB,GAAE,CAAC,CAAC,eAAe,EAAE,CAAA;IACnD,CAAC,CAAC,CAAA;IAEF,IAAA,WAAE,EAAC,wFAAwF,EAAE;QACzF,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,aAAa,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAA;QAC1D,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAA;QACzD,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,eAAe,EAAE,cAAc,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAA;QAChF,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,eAAe,EAAE,aAAa,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAA;QAC/E,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,YAAY,aACtC,KAAK,EAAE,WAAE,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,cAAM,OAAA,CAAC;gBACrC,OAAO,EAAE,KAAK;aACjB,CAAC,EAFsC,CAEtC,CAAC,IACA,uBAAY,EACjB,CAAA;QAEF,IAAA,eAAM,EAAC,IAAA,gCAAmB,GAAE,CAAC,CAAC,eAAe,EAAE,CAAA;IACnD,CAAC,CAAC,CAAA;IAEF,IAAA,WAAE,EAAC,qEAAqE,EAAE;QACtE,MAAM,CAAC,cAAc,CAAC,QAAQ,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAA;QACxD,MAAM,CAAC,cAAc,CAAC,QAAQ,EAAE,iBAAiB,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAA;QACnE,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,YAAY,aACtC,KAAK,EAAE,WAAE,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,cAAM,OAAA,CAAC;gBACrC,OAAO,EAAE,KAAK;aACjB,CAAC,EAFsC,CAEtC,CAAC,IACA,uBAAY,EACjB,CAAA;QAEF,IAAA,eAAM,EAAC,IAAA,gCAAmB,GAAE,CAAC,CAAC,eAAe,EAAE,CAAA;IACnD,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAA","sourcesContent":["// @vitest-environment jsdom\n\nimport { describe, it, expect, vi } from 'vitest'\nimport { CONFIGURABLE } from '../mocks/mocks.js'\nimport getScreenDimensions from './getScreenDimensions.js'\n\ndescribe('getScreenDimensions', () => {\n    it('should get the needed screen dimensions', () => {\n        Object.defineProperty(window, 'matchMedia', {\n            value: vi.fn().mockImplementation(() => ({\n                matches: true,\n            })),\n            ...CONFIGURABLE,\n        })\n        expect(getScreenDimensions()).toMatchSnapshot()\n    })\n\n    it('should get the needed screen dimensions if the outerHeight and outerWidth are set to 0', () => {\n        Object.defineProperty(window, 'outerHeight', { value: 0 })\n        Object.defineProperty(window, 'outerWidth', { value: 0 })\n        Object.defineProperty(document.documentElement, 'clientHeight', { value: 1234 })\n        Object.defineProperty(document.documentElement, 'clientWidth', { value: 4321 }) // @ts-ignore\n        Object.defineProperty(window, 'matchMedia', {\n            value: vi.fn().mockImplementation(() => ({\n                matches: false,\n            })),\n            ...CONFIGURABLE,\n        })\n\n        expect(getScreenDimensions()).toMatchSnapshot()\n    })\n\n    it('should return zeroed dimensions if the document attributes are null', () => {\n        Object.defineProperty(document, 'body', { value: null })\n        Object.defineProperty(document, 'documentElement', { value: null })\n        Object.defineProperty(window, 'matchMedia', {\n            value: vi.fn().mockImplementation(() => ({\n                matches: false,\n            })),\n            ...CONFIGURABLE,\n        })\n\n        expect(getScreenDimensions()).toMatchSnapshot()\n    })\n})\n"]}