{"version":3,"file":"hideRemoveElements.js","sourceRoot":"","sources":["../../src/clientSideScripts/hideRemoveElements.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Hide or remove elements on the page\n */\nexport default function hideRemoveElements(\n    hideRemoveElements: {\n        hide: (HTMLElement | HTMLElement[])[];\n        remove: (HTMLElement | HTMLElement[])[];\n    },\n    hideRemove: boolean,\n): any {\n    const visitedSelectors: Record<string, boolean> = {}\n    hideRemoveElements.hide.forEach((element) => {\n        if (Array.isArray(element)) {\n            return element.forEach((singleElement: HTMLElement) => hideRemoveEl(singleElement, 'visibility', hideRemove))\n        }\n        hideRemoveEl(element, 'visibility', hideRemove)\n    })\n\n    hideRemoveElements.remove.forEach((element) => {\n        if (Array.isArray(element)) {\n            return element.forEach((singleElement: HTMLElement) => hideRemoveEl(singleElement, 'display', hideRemove))\n        }\n        hideRemoveEl(element, 'display', hideRemove)\n    })\n\n    function hideRemoveEl(el: HTMLElement, prop: string, hideRemove: boolean) {\n        // @ts-ignore\n        if (el.style) {\n            // Here we get the HTMLElement\n            // @ts-ignore\n            setPropertyToElement(el, prop, hideRemove)\n        } else {\n            // Here we have the WebElement, with the web element we can have 2 types of selectors\n            // css and xpath, transform them into HTML\n            // This is an anti pattern, but I don't know how to do this better with XPATH selection\n            try {\n                // @ts-ignore\n                const selector = el.selector\n\n                if (!visitedSelectors[selector]) {\n                    visitedSelectors[selector] = true\n                    const elems = document.querySelectorAll(selector)\n\n                    elems.forEach((singleEl) => setPropertyToElement(singleEl, prop, hideRemove))\n                }\n            } catch (e) {\n                // 99.99% sure that we have XPATH here\n                // @ts-ignore\n                return getElementsByXpath(el.selector).forEach((singleEl) => setPropertyToElement(singleEl, prop, hideRemove))\n            }\n        }\n    }\n\n    function setPropertyToElement(el: HTMLElement, prop: string, hideRemove: boolean) {\n        const value = prop === 'visibility' ? 'hidden' : 'none'\n        // @ts-ignore\n        el.style[prop] = hideRemove ? value : ''\n\n        hideRemove ? el.style.setProperty(prop, value, 'important') : el.style.removeProperty(prop)\n    }\n\n    // Stupid TypeScript =)\n    function getElementsByXpath(xpathToExecute: string): any[] {\n        const result = []\n        const nodesSnapshot = document.evaluate(xpathToExecute, document, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null)\n\n        for (let i = 0; i < nodesSnapshot.snapshotLength; i++) {\n            result.push(nodesSnapshot.snapshotItem(i))\n        }\n\n        return result\n    }\n}\n"]}