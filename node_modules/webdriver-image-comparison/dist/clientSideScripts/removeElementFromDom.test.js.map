{"version":3,"file":"removeElementFromDom.test.js","sourceRoot":"","sources":["../../src/clientSideScripts/removeElementFromDom.test.ts"],"names":[],"mappings":";;;;;AAEA,iCAA6C;AAC7C,sFAA4D;AAE5D,IAAA,iBAAQ,EAAC,sBAAsB,EAAE;IAC7B,IAAA,WAAE,EAAC,yCAAyC,EAAE;QAE1C,IAAM,EAAE,GAAG,MAAM,CAAA;QACjB,IAAM,OAAO,GAAG,mBAAmB,CAAA;QACnC,IAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;QACtE,IAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAA;QAE7C,KAAK,CAAC,EAAE,GAAG,EAAE,CAAA;QACb,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAA;QACnD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAA;QAEvB,IAAA,eAAM,EAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,eAAe,EAAE,CAAA;QAEnD,IAAA,iCAAoB,EAAC,EAAE,CAAC,CAAA;QAExB,IAAA,eAAM,EAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,eAAe,EAAE,CAAA;IACvD,CAAC,CAAC,CAAA;IAEF,IAAA,WAAE,EAAC,gDAAgD,EAAE;QACjD,IAAM,EAAE,GAAG,MAAM,CAAA;QAEjB,IAAA,eAAM,EAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,eAAe,EAAE,CAAA;QAEnD,IAAA,iCAAoB,EAAC,EAAE,CAAC,CAAA;QAExB,IAAA,eAAM,EAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,eAAe,EAAE,CAAA;IACvD,CAAC,CAAC,CAAA;IAEF,IAAA,WAAE,EAAC,4CAA4C,EAAE;QAC7C,IAAM,EAAE,GAAG,MAAM,CAAA;QACjB,MAAM,CAAC,cAAc,CAAC,QAAQ,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAA;QAExD,IAAA,iCAAoB,EAAC,EAAE,CAAC,CAAA;QAExB,IAAA,eAAM,EAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;IACpC,CAAC,CAAC,CAAA;IAEF,IAAA,WAAE,EAAC,mDAAmD,EAAE;QACpD,QAAQ,CAAC,IAAI,CAAC,SAAS;YACnB,OAAO;gBACP,iCAAiC;gBACjC,iCAAiC;gBACjC,UAAU;gBACV,mCAAmC;gBACnC,mCAAmC;gBACnC,UAAU;gBACV,QAAQ,CAAA;QAEZ,IAAA,eAAM,EAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAA;QAEvC,IAAA,iCAAoB,EAAC,MAAM,CAAC,CAAA;QAE5B,IAAA,eAAM,EAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAA;IAC3C,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAA","sourcesContent":["// @vitest-environment jsdom\n\nimport { describe, it, expect } from 'vitest'\nimport removeElementFromDom from './removeElementFromDom.js'\n\ndescribe('removeElementFromDom', () => {\n    it('should be able to remove the custom css', () => {\n        // Set up our document body\n        const id = 'test'\n        const cssText = 'body:{width:100%}'\n        const head = document.head || document.getElementsByTagName('head')[0]\n        const style = document.createElement('style')\n\n        style.id = id\n        style.appendChild(document.createTextNode(cssText))\n        head.appendChild(style)\n\n        expect(document.head.textContent).toMatchSnapshot()\n\n        removeElementFromDom(id)\n\n        expect(document.head.textContent).toMatchSnapshot()\n    })\n\n    it('should do nothing if custom css is not present', () => {\n        const id = 'test'\n\n        expect(document.head.textContent).toMatchSnapshot()\n\n        removeElementFromDom(id)\n\n        expect(document.head.textContent).toMatchSnapshot()\n    })\n\n    it('should do nothing if document.head is null', () => {\n        const id = 'test'\n        Object.defineProperty(document, 'head', { value: null })\n\n        removeElementFromDom(id)\n\n        expect(document.head).toBe(null)\n    })\n\n    it('should be able to remove an element from the body', () => {\n        document.body.innerHTML =\n            '<div>' +\n            '   <span id=\"id-1\">Hello</span>' +\n            '   <span id=\"id-2\">Hello</span>' +\n            '   <div>' +\n            '     <span id=\"id-3\">Hello</span>' +\n            '     <span id=\"id-4\">Hello</span>' +\n            '  </div>' +\n            '</div>'\n\n        expect(document.body).toMatchSnapshot()\n\n        removeElementFromDom('id-1')\n\n        expect(document.body).toMatchSnapshot()\n    })\n})\n"]}