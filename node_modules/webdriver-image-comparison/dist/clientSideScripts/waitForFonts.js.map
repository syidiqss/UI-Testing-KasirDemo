{"version":3,"file":"waitForFonts.js","sourceRoot":"","sources":["../../src/clientSideScripts/waitForFonts.ts"],"names":[],"mappings":";;AAMA,SAAwB,YAAY;IAChC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;QAC/B,IAAM,cAAc,GAAG,IAAI,OAAO,CAAO,UAAC,CAAC,EAAE,MAAM;YAC/C,UAAU,CAAC;gBACP,MAAM,CAAC,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC,CAAA;YAC/C,CAAC,EAAE,KAAK,CAAC,CAAA;QACb,CAAC,CAAC,CAAA;QAEF,OAAO,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;aAC/C,IAAI,CAAC;YACF,OAAO,CAAC,uBAAuB,CAAC,CAAA;QACpC,CAAC,CAAC;aACD,KAAK,CAAC,MAAM,CAAC,CAAA;IACtB,CAAC,CAAC,CAAA;AACN,CAAC;AAdD,+BAcC","sourcesContent":["/**\n * Wait for the fonts to be loaded, do this for a max of 11 seconds\n *\n * NOTE: writing this with promises instead of async/await because it fails with\n * `javascript error: __awaiter is not defined` when running in the browser\n */\nexport default function waitForFonts(): Promise<void|string> {\n    return new Promise((resolve, reject) => {\n        const timeoutPromise = new Promise<void>((_, reject) => {\n            setTimeout(() => {\n                reject(new Error('Font loading timed out'))\n            }, 11000)\n        })\n\n        Promise.race([document.fonts.ready, timeoutPromise])\n            .then(() => {\n                resolve('All fonts have loaded')\n            })\n            .catch(reject)\n    })\n}\n"]}