{"version":3,"file":"check.interfaces.js","sourceRoot":"","sources":["../../src/commands/check.interfaces.ts"],"names":[],"mappings":"","sourcesContent":["import type { ChainablePromiseElement } from 'webdriverio'\nimport type { RectanglesOutput } from '../methods/rectangles.interfaces'\n\nexport interface CheckMethodOptions {\n    // Block out array with x, y, width and height values\n    blockOut?: RectanglesOutput[];\n    // Block out the side bar on iOS iPads in landscape mode\n    blockOutSideBar?: boolean;\n    // Block out the status bar yes or no\n    blockOutStatusBar?: boolean;\n    // Block out the tool bar yes or no\n    blockOutToolBar?: boolean;\n    // Ignore elements and or areas\n    ignore?: (RectanglesOutput | WebdriverIO.Element | ChainablePromiseElement<WebdriverIO.Element>)[];\n    // Compare images and discard alpha\n    ignoreAlpha?: boolean;\n    // Compare images an discard anti aliasing\n    ignoreAntialiasing?: boolean;\n    // Even though the images are in color, the comparison wil compare 2 black/white images\n    ignoreColors?: boolean;\n    // Compare images and compare with red = 16, green = 16, blue = 16, alpha = 16, minBrightness=16, maxBrightness=240\n    ignoreLess?: boolean;\n    // Compare images and compare with red = 0, green = 0, blue = 0, alpha = 0, minBrightness=0, maxBrightness=255\n    ignoreNothing?: boolean;\n    // Default false. If true, return percentage will be like 0.12345678, default is 0.12\n    rawMisMatchPercentage?: boolean;\n    // Return all the compare data object\n    returnAllCompareData?: boolean;\n    // Allowable value of misMatchPercentage that prevents saving image with\n    saveAboveTolerance?: number;\n    //Scale images to same size before comparison\n    scaleImagesToSameSize?: boolean;\n}\n"]}