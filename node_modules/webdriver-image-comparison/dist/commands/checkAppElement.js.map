{"version":3,"file":"checkAppElement.js","sourceRoot":"","sources":["../../src/commands/checkAppElement.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,oDAA4D;AAE5D,kDAA0D;AAI1D,0EAAgD;AAKhD,SAA8B,eAAe,CACzC,OAAgB,EAChB,YAA0B,EAC1B,OAAgB,EAChB,OAAmB,EACnB,GAAW,EACX,mBAAwC,EACxC,eAAwB;;;;;;oBAGhB,QAAQ,GAAK,YAAY,SAAjB,CAAiB;oBACzB,QAAQ,GAAK,OAAO,SAAZ,CAAY;oBAGwB,WAAM,IAAA,2BAAc,EACpE,OAAO,EACP,YAAY,EACZ,OAAO,EACP,OAAO,EACP,GAAG,EACH,mBAAmB,EACnB,eAAe,CAClB,EAAA;;oBARK,KAA8C,SAQnD,EARO,gBAAgB,sBAAA,EAAE,QAAQ,cAAA,EAAE,WAAW,iBAAA;oBAazC,cAAc,GAAG,IAAA,iCAAoB,EAAC,mBAAmB,CAAC,MAAM,CAAC,CAAA;oBACjE,qBAAqB,GAAG;wBAC1B,gBAAgB,kBAAA;wBAChB,cAAc,EAAE;4BACZ,GAAG,EAAE,mBAAmB,CAAC,GAAG,CAAC,cAAc;4BAC3C,MAAM,EAAE,cAAc;yBACzB;wBACD,QAAQ,UAAA;wBACR,aAAa,EAAE;4BACX,gBAAgB,EAAE,mBAAmB,CAAC,GAAG,CAAC,gBAAgB;4BAC1D,YAAY,EAAE,OAAO,CAAC,YAAY;4BAClC,cAAc,EAAE,OAAO,CAAC,cAAc;4BACtC,UAAU,EAAE,OAAO,CAAC,UAAU;4BAC9B,WAAW,EAAE,YAAY,CAAC,WAAW;4BACrC,UAAU,EAAE,YAAY,CAAC,UAAU;4BACnC,QAAQ,UAAA;4BACR,eAAe,EAAE,mBAAmB,CAAC,GAAG,CAAC,eAAe;yBAC3D;wBACD,4BAA4B,EAAE,YAAY,CAAC,mBAAmB;wBAC9D,WAAW,EAAE,mBAAmB,CAAC,GAAG,CAAC,WAAW;wBAChD,WAAW,aAAA;wBACX,QAAQ,EAAE,mBAAmB,CAAC,GAAG,CAAC,QAAQ;wBAC1C,YAAY,EAAE,YAAY,CAAC,YAAY;qBAC1C,CAAA;oBAGD,WAAO,IAAA,+BAAmB,EAAC,QAAQ,EAAE,qBAAqB,CAAC,EAAA;;;;CAC9D;AAtDD,kCAsDC","sourcesContent":["import type { Folders } from '../base.interfaces.js'\nimport { methodCompareOptions } from '../helpers/options.js'\nimport type { ImageCompareResult } from '../methods/images.interfaces.js'\nimport { executeImageCompare } from '../methods/images.js'\nimport type { InstanceData } from '../methods/instanceData.interfaces.js'\nimport type { Methods } from '../methods/methods.interfaces.js'\nimport type { CheckElementOptions, WicElement } from './element.interfaces.js'\nimport saveAppElement from './saveAppElement.js'\n\n/**\n * Compare  an image of the element\n */\nexport default async function checkAppElement(\n    methods: Methods,\n    instanceData: InstanceData,\n    folders: Folders,\n    element: WicElement,\n    tag: string,\n    checkElementOptions: CheckElementOptions,\n    isNativeContext: boolean,\n): Promise<ImageCompareResult | number> {\n    // 1. Set some vars\n    const { isMobile } = instanceData\n    const { executor } = methods\n\n    // 2. Save the element and return the data\n    const { devicePixelRatio, fileName, isLandscape } = await saveAppElement(\n        methods,\n        instanceData,\n        folders,\n        element,\n        tag,\n        checkElementOptions,\n        isNativeContext,\n    )\n    // @TODO: This is something for the future, to allow ignore regions on the element itself.\n    // This will become a feature request\n\n    // 3a. Determine the options\n    const compareOptions = methodCompareOptions(checkElementOptions.method)\n    const executeCompareOptions = {\n        devicePixelRatio,\n        compareOptions: {\n            wic: checkElementOptions.wic.compareOptions,\n            method: compareOptions,\n        },\n        fileName,\n        folderOptions: {\n            autoSaveBaseline: checkElementOptions.wic.autoSaveBaseline,\n            actualFolder: folders.actualFolder,\n            baselineFolder: folders.baselineFolder,\n            diffFolder: folders.diffFolder,\n            browserName: instanceData.browserName,\n            deviceName: instanceData.deviceName,\n            isMobile,\n            savePerInstance: checkElementOptions.wic.savePerInstance,\n        },\n        isAndroidNativeWebScreenshot: instanceData.nativeWebScreenshot,\n        isHybridApp: checkElementOptions.wic.isHybridApp,\n        isLandscape,\n        logLevel: checkElementOptions.wic.logLevel,\n        platformName: instanceData.platformName,\n    }\n\n    // 3b Now execute the compare and return the data\n    return executeImageCompare(executor, executeCompareOptions)\n}\n"]}