{"version":3,"file":"checkScreen.js","sourceRoot":"","sources":["../../src/commands/checkScreen.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,0EAAgD;AAChD,0EAAgD;AAKhD,SAA8B,WAAW,CACrC,OAAgB,EAChB,YAA0B,EAC1B,OAAgB,EAChB,GAAW,EACX,kBAAsC,EACtC,eAAwB;;;YAExB,WAAO,eAAe;oBAClB,CAAC,CAAC,IAAA,2BAAc,EAAC,OAAO,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG,EAAE,kBAAkB,EAAE,eAAe,CAAC;oBAC1F,CAAC,CAAC,IAAA,2BAAc,EAAC,OAAO,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG,EAAE,kBAAkB,EAAE,eAAe,CAAC,EAAA;;;CACjG;AAXD,8BAWC","sourcesContent":["import type { ImageCompareResult } from '../methods/images.interfaces'\nimport type { Methods } from '../methods/methods.interfaces'\nimport type { InstanceData } from '../methods/instanceData.interfaces'\nimport type { Folders } from '../base.interfaces'\nimport type { CheckScreenOptions } from './screen.interfaces'\nimport checkAppScreen from './checkAppScreen.js'\nimport checkWebScreen from './checkWebScreen.js'\n\n/**\n * Compare an image of the viewport of the screen\n */\nexport default async function checkScreen(\n    methods: Methods,\n    instanceData: InstanceData,\n    folders: Folders,\n    tag: string,\n    checkScreenOptions: CheckScreenOptions,\n    isNativeContext: boolean,\n): Promise<ImageCompareResult | number> {\n    return isNativeContext\n        ? checkAppScreen(methods, instanceData, folders, tag, checkScreenOptions, isNativeContext)\n        : checkWebScreen(methods, instanceData, folders, tag, checkScreenOptions, isNativeContext)\n}\n"]}