{"version":3,"file":"checkWebElement.js","sourceRoot":"","sources":["../../src/commands/checkWebElement.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,kDAA0D;AAC1D,gDAAmD;AACnD,0EAAgD;AAMhD,oDAA4D;AAK5D,SAA8B,eAAe,CACzC,OAAgB,EAChB,YAA0B,EAC1B,OAAgB,EAChB,OAAoB,EACpB,GAAW,EACX,mBAAwC,EAExC,eAAwB;;;;;;oBAGlB,kBAAkB,GAAuB;wBAC3C,GAAG,EAAE,mBAAmB,CAAC,GAAG;wBAC5B,MAAM,EAAE;4BACJ,mBAAmB,EAAE,mBAAmB,CAAC,MAAM,CAAC,mBAAmB;4BACnE,mBAAmB,EAAE,mBAAmB,CAAC,MAAM,CAAC,mBAAmB;4BACnE,cAAc,EAAE,mBAAmB,CAAC,MAAM,CAAC,cAAc;4BACzD,gBAAgB,EAAE,mBAAmB,CAAC,MAAM,CAAC,gBAAgB;4BAC7D,YAAY,EAAE,mBAAmB,CAAC,MAAM,CAAC,YAAY,IAAI,EAAE;4BAC3D,cAAc,EAAE,mBAAmB,CAAC,MAAM,CAAC,cAAc,IAAI,EAAE;4BAC/D,kBAAkB,EAAE,mBAAmB,CAAC,MAAM,CAAC,kBAAkB;yBACpE;qBACJ,CAAA;oBACmD,WAAM,IAAA,2BAAc,EACpE,OAAO,EACP,YAAY,EACZ,OAAO,EACP,OAAO,EACP,GAAG,EACH,kBAAkB,EAClB,eAAe,CAClB,EAAA;;oBARK,KAA8C,SAQnD,EARO,gBAAgB,sBAAA,EAAE,QAAQ,cAAA,EAAE,WAAW,iBAAA;oBAWzC,cAAc,GAAG,IAAA,iCAAoB,EAAC,mBAAmB,CAAC,MAAM,CAAC,CAAA;oBACjE,qBAAqB,GAAG;wBAC1B,gBAAgB,kBAAA;wBAChB,cAAc,EAAE;4BACZ,GAAG,EAAE,mBAAmB,CAAC,GAAG,CAAC,cAAc;4BAC3C,MAAM,EAAE,cAAc;yBACzB;wBACD,QAAQ,UAAA;wBACR,aAAa,EAAE;4BACX,gBAAgB,EAAE,mBAAmB,CAAC,GAAG,CAAC,gBAAgB;4BAC1D,YAAY,EAAE,OAAO,CAAC,YAAY;4BAClC,cAAc,EAAE,OAAO,CAAC,cAAc;4BACtC,UAAU,EAAE,OAAO,CAAC,UAAU;4BAC9B,WAAW,EAAE,YAAY,CAAC,WAAW;4BACrC,UAAU,EAAE,YAAY,CAAC,UAAU;4BACnC,QAAQ,EAAE,IAAA,wBAAa,EAAC,YAAY,CAAC,YAAY,CAAC;4BAClD,eAAe,EAAE,mBAAmB,CAAC,GAAG,CAAC,eAAe;yBAC3D;wBACD,4BAA4B,EAAE,YAAY,CAAC,mBAAmB;wBAC9D,WAAW,EAAE,mBAAmB,CAAC,GAAG,CAAC,WAAW;wBAChD,WAAW,aAAA;wBACX,QAAQ,EAAE,mBAAmB,CAAC,GAAG,CAAC,QAAQ;wBAC1C,YAAY,EAAE,YAAY,CAAC,YAAY;qBAC1C,CAAA;oBAGD,WAAO,IAAA,+BAAmB,EAAC,OAAO,CAAC,QAAQ,EAAE,qBAAqB,CAAC,EAAA;;;;CACtE;AA7DD,kCA6DC","sourcesContent":["import { executeImageCompare } from '../methods/images.js'\nimport { checkIsMobile } from '../helpers/utils.js'\nimport saveWebElement from './saveWebElement.js'\nimport type { ImageCompareResult } from '../methods/images.interfaces.js'\nimport type { Methods } from '../methods/methods.interfaces.js'\nimport type { InstanceData } from '../methods/instanceData.interfaces.js'\nimport type { Folders } from '../base.interfaces.js'\nimport type { CheckElementOptions, SaveElementOptions } from './element.interfaces.js'\nimport { methodCompareOptions } from '../helpers/options.js'\n\n/**\n * Compare  an image of the element\n */\nexport default async function checkWebElement(\n    methods: Methods,\n    instanceData: InstanceData,\n    folders: Folders,\n    element: HTMLElement,\n    tag: string,\n    checkElementOptions: CheckElementOptions,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isNativeContext: boolean,\n): Promise<ImageCompareResult | number> {\n    // 1. Take the actual element screenshot and retrieve the needed data\n    const saveElementOptions: SaveElementOptions = {\n        wic: checkElementOptions.wic,\n        method: {\n            disableCSSAnimation: checkElementOptions.method.disableCSSAnimation,\n            enableLayoutTesting: checkElementOptions.method.enableLayoutTesting,\n            hideScrollBars: checkElementOptions.method.hideScrollBars,\n            resizeDimensions: checkElementOptions.method.resizeDimensions,\n            hideElements: checkElementOptions.method.hideElements || [],\n            removeElements: checkElementOptions.method.removeElements || [],\n            waitForFontsLoaded: checkElementOptions.method.waitForFontsLoaded,\n        },\n    }\n    const { devicePixelRatio, fileName, isLandscape } = await saveWebElement(\n        methods,\n        instanceData,\n        folders,\n        element,\n        tag,\n        saveElementOptions,\n        isNativeContext,\n    )\n\n    // 2a. Determine the options\n    const compareOptions = methodCompareOptions(checkElementOptions.method)\n    const executeCompareOptions = {\n        devicePixelRatio,\n        compareOptions: {\n            wic: checkElementOptions.wic.compareOptions,\n            method: compareOptions,\n        },\n        fileName,\n        folderOptions: {\n            autoSaveBaseline: checkElementOptions.wic.autoSaveBaseline,\n            actualFolder: folders.actualFolder,\n            baselineFolder: folders.baselineFolder,\n            diffFolder: folders.diffFolder,\n            browserName: instanceData.browserName,\n            deviceName: instanceData.deviceName,\n            isMobile: checkIsMobile(instanceData.platformName),\n            savePerInstance: checkElementOptions.wic.savePerInstance,\n        },\n        isAndroidNativeWebScreenshot: instanceData.nativeWebScreenshot,\n        isHybridApp: checkElementOptions.wic.isHybridApp,\n        isLandscape,\n        logLevel: checkElementOptions.wic.logLevel,\n        platformName: instanceData.platformName,\n    }\n\n    // 2b Now execute the compare and return the data\n    return executeImageCompare(methods.executor, executeCompareOptions)\n}\n"]}