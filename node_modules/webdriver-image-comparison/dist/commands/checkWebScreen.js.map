{"version":3,"file":"checkWebScreen.js","sourceRoot":"","sources":["../../src/commands/checkWebScreen.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,wEAA8C;AAC9C,kDAA0D;AAC1D,gDAAmD;AAMnD,oDAAkE;AAKlE,SAA8B,cAAc,CACxC,OAAgB,EAChB,YAA0B,EAC1B,OAAgB,EAChB,GAAW,EACX,kBAAsC,EAEtC,eAAwB;;;;;;oBAGlB,iBAAiB,GAAsB;wBACzC,GAAG,EAAE,kBAAkB,CAAC,GAAG;wBAC3B,MAAM,EAAE;4BACJ,mBAAmB,EAAE,kBAAkB,CAAC,MAAM,CAAC,mBAAmB;4BAClE,mBAAmB,EAAE,kBAAkB,CAAC,MAAM,CAAC,mBAAmB;4BAClE,cAAc,EAAE,kBAAkB,CAAC,MAAM,CAAC,cAAc;4BACxD,YAAY,EAAE,kBAAkB,CAAC,MAAM,CAAC,YAAY,IAAI,EAAE;4BAC1D,cAAc,EAAE,kBAAkB,CAAC,MAAM,CAAC,cAAc,IAAI,EAAE;4BAC9D,kBAAkB,EAAE,kBAAkB,CAAC,MAAM,CAAC,kBAAkB;yBACnE;qBACJ,CAAA;oBACmD,WAAM,IAAA,0BAAa,EAAC,OAAO,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG,EAAE,iBAAiB,EAAE,KAAK,CAAC,EAAA;;oBAAhI,KAA8C,SAAkF,EAA9H,gBAAgB,sBAAA,EAAE,QAAQ,cAAA,EAAE,WAAW,iBAAA;oBAGzC,oBAAoB,GAAG,IAAA,uCAA0B,EAAC,kBAAkB,CAAC,MAAM,CAAC,CAAA;oBAC5E,qBAAqB,GAAwB;wBAC/C,gBAAgB,kBAAA;wBAChB,cAAc,EAAE;4BACZ,GAAG,EAAE,kBAAkB,CAAC,GAAG,CAAC,cAAc;4BAC1C,MAAM,EAAE,oBAAoB;yBAC/B;wBACD,QAAQ,UAAA;wBACR,aAAa,EAAE;4BACX,gBAAgB,EAAE,kBAAkB,CAAC,GAAG,CAAC,gBAAgB;4BACzD,YAAY,EAAE,OAAO,CAAC,YAAY;4BAClC,cAAc,EAAE,OAAO,CAAC,cAAc;4BACtC,UAAU,EAAE,OAAO,CAAC,UAAU;4BAC9B,WAAW,EAAE,YAAY,CAAC,WAAW;4BACrC,UAAU,EAAE,YAAY,CAAC,UAAU;4BACnC,QAAQ,EAAE,IAAA,wBAAa,EAAC,YAAY,CAAC,YAAY,CAAC;4BAClD,eAAe,EAAE,kBAAkB,CAAC,GAAG,CAAC,eAAe;yBAC1D;wBACD,4BAA4B,EAAE,YAAY,CAAC,mBAAmB;wBAC9D,WAAW,EAAE,kBAAkB,CAAC,GAAG,CAAC,WAAW;wBAC/C,WAAW,aAAA;wBACX,QAAQ,EAAE,kBAAkB,CAAC,GAAG,CAAC,QAAQ;wBACzC,YAAY,EAAE,YAAY,CAAC,YAAY;qBAC1C,CAAA;oBAGD,WAAO,IAAA,+BAAmB,EAAC,OAAO,CAAC,QAAQ,EAAE,qBAAqB,EAAE,IAAI,CAAC,EAAA;;;;CAC5E;AAnDD,iCAmDC","sourcesContent":["import saveWebScreen from './saveWebScreen.js'\nimport { executeImageCompare } from '../methods/images.js'\nimport { checkIsMobile } from '../helpers/utils.js'\nimport type { ImageCompareOptions, ImageCompareResult } from '../methods/images.interfaces.js'\nimport type { Methods } from '../methods/methods.interfaces.js'\nimport type { InstanceData } from '../methods/instanceData.interfaces.js'\nimport type { Folders } from '../base.interfaces.js'\nimport type { CheckScreenOptions, SaveScreenOptions } from './screen.interfaces.js'\nimport { screenMethodCompareOptions } from '../helpers/options.js'\n\n/**\n * Compare an image of the viewport of the screen\n */\nexport default async function checkWebScreen(\n    methods: Methods,\n    instanceData: InstanceData,\n    folders: Folders,\n    tag: string,\n    checkScreenOptions: CheckScreenOptions,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isNativeContext: boolean,\n): Promise<ImageCompareResult | number> {\n    // 1.  Take the actual screenshot and retrieve the needed data\n    const saveScreenOptions: SaveScreenOptions = {\n        wic: checkScreenOptions.wic,\n        method: {\n            disableCSSAnimation: checkScreenOptions.method.disableCSSAnimation,\n            enableLayoutTesting: checkScreenOptions.method.enableLayoutTesting,\n            hideScrollBars: checkScreenOptions.method.hideScrollBars,\n            hideElements: checkScreenOptions.method.hideElements || [],\n            removeElements: checkScreenOptions.method.removeElements || [],\n            waitForFontsLoaded: checkScreenOptions.method.waitForFontsLoaded,\n        },\n    }\n    const { devicePixelRatio, fileName, isLandscape } = await saveWebScreen(methods, instanceData, folders, tag, saveScreenOptions, false)\n\n    // 2a. Determine the compare options\n    const methodCompareOptions = screenMethodCompareOptions(checkScreenOptions.method)\n    const executeCompareOptions: ImageCompareOptions = {\n        devicePixelRatio,\n        compareOptions: {\n            wic: checkScreenOptions.wic.compareOptions,\n            method: methodCompareOptions,\n        },\n        fileName,\n        folderOptions: {\n            autoSaveBaseline: checkScreenOptions.wic.autoSaveBaseline,\n            actualFolder: folders.actualFolder,\n            baselineFolder: folders.baselineFolder,\n            diffFolder: folders.diffFolder,\n            browserName: instanceData.browserName,\n            deviceName: instanceData.deviceName,\n            isMobile: checkIsMobile(instanceData.platformName),\n            savePerInstance: checkScreenOptions.wic.savePerInstance,\n        },\n        isAndroidNativeWebScreenshot: instanceData.nativeWebScreenshot,\n        isHybridApp: checkScreenOptions.wic.isHybridApp,\n        isLandscape,\n        logLevel: checkScreenOptions.wic.logLevel,\n        platformName: instanceData.platformName,\n    }\n\n    // 2b Now execute the compare and return the data\n    return executeImageCompare(methods.executor, executeCompareOptions, true)\n}\n"]}