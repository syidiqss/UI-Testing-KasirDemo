{"version":3,"file":"saveAppElement.js","sourceRoot":"","sources":["../../src/commands/saveAppElement.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,qFAA2D;AAC3D,wDAAmE;AAEnE,kDAAkE;AAQlE,SAA8B,cAAc,CACxC,OAAgB,EAChB,YAA0B,EAC1B,OAAgB,EAChB,OAAmB,EACnB,GAAW,EACX,kBAAsC,EACtC,eAAwB;;;;;;oBAGlB,KAIF,kBAAkB,CAAC,GAAG,EAHtB,eAAe,qBAAA,EACf,QAAQ,cAAA,EACR,eAAe,qBAAA,CACO;oBAClB,QAAQ,GAAiC,OAAO,SAAxC,EAAE,cAAc,GAAiB,OAAO,eAAxB,EAAE,UAAU,GAAK,OAAO,WAAZ,CAAY;oBAClD,gBAAgB,GAAqB,kBAAkB,CAAC,MAAM,CAAC,gBAAgB,IAAI,wCAAyB,CAAA;oBAE9G,WAAW,GAUX,YAAY,YAVD,EACX,cAAc,GASd,YAAY,eATE,EACd,UAAU,GAQV,YAAY,WARF,EACV,gBAAgB,GAOhB,YAAY,iBAPI,EAChB,gBAAgB,GAMhB,YAAY,iBANI,EAChB,KAAK,GAKL,YAAY,MALP,EACL,QAAQ,GAIR,YAAY,SAJJ,EACR,OAAO,GAGP,YAAY,QAHL,EACP,YAAY,GAEZ,YAAY,aAFA,EACZ,eAAe,GACf,YAAY,gBADG,CACH;oBAGY,WAAM,IAAA,uCAA2B,EAAC;4BAC1D,OAAO,SAAA;4BACP,gBAAgB,kBAAA;4BAChB,KAAK,OAAA;4BACL,OAAO,EAAE;gCACL,cAAc,EAAE,cAAgC;gCAChD,UAAU,YAAA;6BACb;4BACD,gBAAgB,kBAAA;yBACnB,CAAC,EAAA;;oBATI,WAAW,GAAW,SAS1B;oBAGI,YAAY,GAA2B;wBACzC,YAAY,EAAE,OAAO,CAAC,YAAY;wBAClC,WAAW,aAAA;wBACX,QAAQ,EAAE;4BACN,WAAW,aAAA;4BACX,UAAU,YAAA;4BACV,QAAQ,UAAA;4BACR,eAAe,iBAAA;yBAClB;wBACD,QAAQ,EAAE;4BACN,WAAW,aAAA;4BACX,cAAc,gBAAA;4BACd,UAAU,YAAA;4BACV,gBAAgB,EAAE,gBAAgB;4BAClC,eAAe,iBAAA;4BACf,QAAQ,UAAA;4BACR,eAAe,EAAE,CAAC,eAAe;4BACjC,OAAO,SAAA;4BACP,IAAI,EAAE,EAAE;4BACR,YAAY,cAAA;4BACZ,eAAe,iBAAA;4BACf,YAAY,EAAE,gBAAgB,CAAC,MAAM;4BACrC,WAAW,EAAE,gBAAgB,CAAC,KAAK;4BACnC,GAAG,KAAA;yBACN;wBACD,eAAe,iBAAA;wBACf,WAAW,EAAC,KAAK;wBACjB,QAAQ,UAAA;wBACR,YAAY,cAAA;qBACf,CAAA;oBAGD,WAAO,IAAA,4BAAe,EAAC,QAAQ,EAAE,YAAY,CAAC,EAAA;;;;CACjD;AA5ED,iCA4EC","sourcesContent":["import type { Folders } from '../base.interfaces.js'\nimport type { AfterScreenshotOptions, ScreenshotOutput } from '../helpers/afterScreenshot.interfaces.js'\nimport afterScreenshot from '../helpers/afterScreenshot.js'\nimport { DEFAULT_RESIZE_DIMENSIONS } from '../helpers/constants.js'\nimport type { ResizeDimensions } from '../methods/images.interfaces.js'\nimport { takeBase64ElementScreenshot } from '../methods/images.js'\nimport type { InstanceData } from '../methods/instanceData.interfaces.js'\nimport type { GetElementRect, Methods } from '../methods/methods.interfaces.js'\nimport type { SaveElementOptions, WicElement } from './element.interfaces.js'\n\n/**\n * Saves an element image for a native app\n */\nexport default async function saveAppElement(\n    methods: Methods,\n    instanceData: InstanceData,\n    folders: Folders,\n    element: WicElement,\n    tag: string,\n    saveElementOptions: SaveElementOptions,\n    isNativeContext: boolean,\n): Promise<ScreenshotOutput> {\n    // 1. Set some variables\n    const {\n        formatImageName,\n        logLevel,\n        savePerInstance,\n    } = saveElementOptions.wic\n    const { executor, getElementRect, screenShot } = methods\n    const resizeDimensions: ResizeDimensions = saveElementOptions.method.resizeDimensions || DEFAULT_RESIZE_DIMENSIONS\n    const {\n        browserName,\n        browserVersion,\n        deviceName,\n        devicePixelRatio,\n        deviceScreenSize,\n        isIOS,\n        isMobile,\n        logName,\n        platformName,\n        platformVersion,\n    } = instanceData\n\n    // 2. Take the screenshot\n    const base64Image: string = await takeBase64ElementScreenshot({\n        element,\n        devicePixelRatio,\n        isIOS,\n        methods: {\n            getElementRect: getElementRect as GetElementRect,\n            screenShot,\n        },\n        resizeDimensions,\n    })\n\n    // 3.  The after the screenshot methods\n    const afterOptions: AfterScreenshotOptions = {\n        actualFolder: folders.actualFolder,\n        base64Image,\n        filePath: {\n            browserName,\n            deviceName,\n            isMobile,\n            savePerInstance,\n        },\n        fileName: {\n            browserName,\n            browserVersion,\n            deviceName,\n            devicePixelRatio: devicePixelRatio,\n            formatImageName,\n            isMobile,\n            isTestInBrowser: !isNativeContext,\n            logName,\n            name: '',\n            platformName,\n            platformVersion,\n            screenHeight: deviceScreenSize.height,\n            screenWidth: deviceScreenSize.width,\n            tag,\n        },\n        isNativeContext,\n        isLandscape:false,\n        logLevel,\n        platformName,\n    }\n\n    // 4.  Return the data\n    return afterScreenshot(executor, afterOptions)\n}\n"]}