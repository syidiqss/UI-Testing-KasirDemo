{"version":3,"file":"saveElement.js","sourceRoot":"","sources":["../../src/commands/saveElement.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,0EAAgD;AAChD,0EAAgD;AAKhD,SAA8B,WAAW,CACrC,OAAgB,EAChB,YAA0B,EAC1B,OAAgB,EAChB,OAAmB,EACnB,GAAW,EACX,kBAAsC,EACtC,eAAwB;;;YAExB,WAAO,eAAe;oBAClB,CAAC,CAAC,IAAA,2BAAc,EAAC,OAAO,EAAE,YAAY,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,kBAAkB,EAAE,eAAe,CAAC;oBACnG,CAAC,CAAC,IAAA,2BAAc,EAAC,OAAO,EAAE,YAAY,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,kBAAkB,EAAE,eAAe,CAAC,EAAA;;;CAC1G;AAZD,8BAYC","sourcesContent":["import type { ScreenshotOutput } from '../helpers/afterScreenshot.interfaces'\nimport type { Methods } from '../methods/methods.interfaces'\nimport type { InstanceData } from '../methods/instanceData.interfaces'\nimport type { Folders } from '../base.interfaces'\nimport type { SaveElementOptions, WicElement } from './element.interfaces'\nimport saveAppElement from './saveAppElement.js'\nimport saveWebElement from './saveWebElement.js'\n\n/**\n * Saves an image of an element\n */\nexport default async function saveElement(\n    methods: Methods,\n    instanceData: InstanceData,\n    folders: Folders,\n    element: WicElement,\n    tag: string,\n    saveElementOptions: SaveElementOptions,\n    isNativeContext: boolean,\n): Promise<ScreenshotOutput> {\n    return isNativeContext\n        ? saveAppElement(methods, instanceData, folders, element, tag, saveElementOptions, isNativeContext)\n        : saveWebElement(methods, instanceData, folders, element, tag, saveElementOptions, isNativeContext)\n}\n"]}