{"version":3,"file":"saveFullPageScreen.js","sourceRoot":"","sources":["../../src/commands/saveFullPageScreen.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uFAA6D;AAC7D,qFAA2D;AAC3D,4DAA4E;AAC5E,kDAA8D;AAY9D,SAA8B,kBAAkB,CAC5C,OAAgB,EAChB,YAA0B,EAC1B,OAAgB,EAChB,GAAW,EACX,mBAAwC,EACxC,eAAwB;;;;;;oBAGxB,IAAI,eAAe,EAAE,CAAC;wBAClB,MAAM,IAAI,KAAK,CAAC,0FAA0F,CAAC,CAAA;oBAC/G,CAAC;oBAGK,KAOF,mBAAmB,CAAC,GAAG,EANvB,uBAAuB,6BAAA,EACvB,eAAe,qBAAA,EACf,WAAW,iBAAA,EACX,QAAQ,cAAA,EACR,eAAe,qBAAA,EACf,oBAAoB,0BAAA,CACG;oBAGrB,mBAAmB,GAAY,mBAAmB,CAAC,MAAM,CAAC,mBAAmB,KAAK,SAAS;wBAC7F,CAAC,CAAC,OAAO,CAAC,mBAAmB,CAAC,MAAM,CAAC,mBAAmB,CAAC;wBACzD,CAAC,CAAC,mBAAmB,CAAC,GAAG,CAAC,mBAAmB,CAAA;oBAC3C,mBAAmB,GAAY,mBAAmB,CAAC,MAAM,CAAC,mBAAmB,KAAK,SAAS;wBAC7F,CAAC,CAAC,OAAO,CAAC,mBAAmB,CAAC,MAAM,CAAC,mBAAmB,CAAC;wBACzD,CAAC,CAAC,mBAAmB,CAAC,GAAG,CAAC,mBAAmB,CAAA;oBAC3C,cAAc,GAAY,mBAAmB,CAAC,MAAM,CAAC,cAAc,KAAK,SAAS;wBACnF,CAAC,CAAC,OAAO,CAAC,mBAAmB,CAAC,MAAM,CAAC,cAAc,CAAC;wBACpD,CAAC,CAAC,mBAAmB,CAAC,GAAG,CAAC,cAAc,CAAA;oBACtC,qBAAqB,GAAW,mBAAmB,CAAC,MAAM,CAAC,qBAAqB,KAAK,SAAS;wBAChG,CAAC,CAAC,mBAAmB,CAAC,MAAM,CAAC,qBAAsB;wBACnD,CAAC,CAAC,mBAAmB,CAAC,GAAG,CAAC,qBAAqB,CAAA;oBAC7C,YAAY,GAAkB,mBAAmB,CAAC,MAAM,CAAC,YAAY,IAAI,EAAE,CAAA;oBAC3E,cAAc,GAAkB,mBAAmB,CAAC,MAAM,CAAC,cAAc,IAAI,EAAE,CAAA;oBAC/E,oBAAoB,GAAkB,mBAAmB,CAAC,MAAM,CAAC,oBAAoB,IAAI,EAAE,CAAA;oBAC3F,kBAAkB,GAAY,mBAAmB,CAAC,MAAM,CAAC,kBAAkB,KAAK,SAAS;wBAC3F,CAAC,CAAC,OAAO,CAAC,mBAAmB,CAAC,MAAM,CAAC,kBAAkB,CAAC;wBACxD,CAAC,CAAC,mBAAmB,CAAC,GAAG,CAAC,kBAAkB,CAAA;oBAG1C,aAAa,GAA4B;wBAC3C,YAAY,cAAA;wBACZ,uBAAuB,yBAAA;wBACvB,mBAAmB,qBAAA;wBACnB,mBAAmB,qBAAA;wBACnB,YAAY,cAAA;wBACZ,QAAQ,UAAA;wBACR,YAAY,EAAE,cAAc;wBAC5B,cAAc,gBAAA;wBACd,oBAAoB,sBAAA;wBACpB,kBAAkB,oBAAA;qBACrB,CAAA;oBACoD,WAAM,IAAA,6BAAgB,EAAC,OAAO,CAAC,QAAQ,EAAE,aAAa,EAAE,IAAI,CAAC,EAAA;;oBAA5G,oBAAoB,GAA2B,SAA6D;oBAC5G,gBAAgB,GAAG,oBAAoB,CAAC,UAAU,CAAC,MAAM,CAAC,gBAAgB,CAAA;oBAC1E,WAAW,GAAG,oBAAoB,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,CAAA;oBAGhE,yBAAyB,GAAkC;wBAC7D,uBAAuB,EAAE,oBAAoB,CAAC,uBAAuB;wBACrE,gBAAgB,EAAE,gBAAgB,IAAI,GAAG;wBACzC,qBAAqB,uBAAA;wBACrB,oBAAoB,sBAAA;wBACpB,WAAW,EAAE,oBAAoB,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,IAAI,GAAG;wBACtE,SAAS,EAAE,oBAAoB,CAAC,SAAS;wBACzC,+BAA+B,EAAE,oBAAoB,CAAC,+BAA+B;wBACrF,4BAA4B,EAAE,oBAAoB,CAAC,4BAA4B;wBAC/E,WAAW,aAAA;wBACX,KAAK,EAAE,oBAAoB,CAAC,KAAK;wBACjC,WAAW,aAAA;wBACX,QAAQ,EAAE,QAAQ;wBAClB,YAAY,EAAE,oBAAoB,CAAC,UAAU,CAAC,MAAM,CAAC,YAAY,IAAI,GAAG;wBACxE,WAAW,EAAE,oBAAoB,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,IAAI,GAAG;wBACtE,oBAAoB,EAAE,oBAAoB,CAAC,oBAAoB;qBAClE,CAAA;oBACgD,WAAM,IAAA,iDAAgC,EACnF,OAAO,CAAC,UAAU,EAClB,OAAO,CAAC,QAAQ,EAChB,yBAAyB,CAC5B,EAAA;;oBAJK,eAAe,GAA4B,SAIhD;oBAGmC,WAAM,IAAA,mCAAuB,EAAC,eAAe,EAAE;4BAC/E,gBAAgB,EAAE,gBAAgB,IAAI,GAAG;4BACzC,WAAW,aAAA;yBACd,CAAC,EAAA;;oBAHI,mBAAmB,GAAW,SAGlC;oBAGI,YAAY,GAA2B;wBACzC,YAAY,EAAE,OAAO,CAAC,YAAY;wBAClC,WAAW,EAAE,mBAAmB;wBAChC,mBAAmB,qBAAA;wBACnB,mBAAmB,qBAAA;wBACnB,QAAQ,EAAE;4BACN,WAAW,EAAE,oBAAoB,CAAC,WAAW;4BAC7C,UAAU,EAAE,oBAAoB,CAAC,UAAU;4BAC3C,QAAQ,EAAE,oBAAoB,CAAC,QAAQ;4BACvC,eAAe,iBAAA;yBAClB;wBACD,QAAQ,EAAE;4BACN,WAAW,EAAE,oBAAoB,CAAC,WAAW;4BAC7C,cAAc,EAAE,oBAAoB,CAAC,cAAc;4BACnD,UAAU,EAAE,oBAAoB,CAAC,UAAU;4BAC3C,gBAAgB,EAAE,oBAAoB,CAAC,UAAU,CAAC,MAAM,CAAC,gBAAgB,IAAI,GAAG;4BAChF,eAAe,iBAAA;4BACf,QAAQ,EAAE,oBAAoB,CAAC,QAAQ;4BACvC,eAAe,EAAE,oBAAoB,CAAC,eAAe;4BACrD,OAAO,EAAE,oBAAoB,CAAC,OAAO;4BACrC,IAAI,EAAE,oBAAoB,CAAC,IAAI;4BAC/B,WAAW,EAAE,oBAAoB,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,IAAI,GAAG;4BACtE,UAAU,EAAE,oBAAoB,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,IAAI,GAAG;4BACpE,YAAY,EAAE,oBAAoB,CAAC,YAAY;4BAC/C,eAAe,EAAE,oBAAoB,CAAC,eAAe;4BACrD,YAAY,EAAE,oBAAoB,CAAC,UAAU,CAAC,MAAM,CAAC,YAAY,IAAI,GAAG;4BACxE,WAAW,EAAE,oBAAoB,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,IAAI,GAAG;4BACtE,GAAG,KAAA;yBACN;wBACD,YAAY,cAAA;wBACZ,cAAc,gBAAA;wBACd,WAAW,aAAA;wBACX,eAAe,EAAE,KAAK;wBACtB,QAAQ,UAAA;wBACR,YAAY,EAAE,YAAY,CAAC,YAAY;wBACvC,cAAc,gBAAA;qBACjB,CAAA;oBAGD,WAAO,IAAA,4BAAe,EAAC,OAAO,CAAC,QAAQ,EAAE,YAAa,CAAC,EAAA;;;;CAC1D;AAnID,qCAmIC","sourcesContent":["import beforeScreenshot from '../helpers/beforeScreenshot.js'\nimport afterScreenshot from '../helpers/afterScreenshot.js'\nimport { getBase64FullPageScreenshotsData } from '../methods/screenshots.js'\nimport { makeFullPageBase64Image } from '../methods/images.js'\nimport type { ScreenshotOutput, AfterScreenshotOptions } from '../helpers/afterScreenshot.interfaces'\nimport type { Methods } from '../methods/methods.interfaces'\nimport type { InstanceData } from '../methods/instanceData.interfaces'\nimport type { Folders } from '../base.interfaces'\nimport type { SaveFullPageOptions } from './fullPage.interfaces'\nimport type { BeforeScreenshotOptions, BeforeScreenshotResult } from '../helpers/beforeScreenshot.interfaces'\nimport type { FullPageScreenshotDataOptions, FullPageScreenshotsData } from '../methods/screenshots.interfaces'\n\n/**\n * Saves an image of the full page\n */\nexport default async function saveFullPageScreen(\n    methods: Methods,\n    instanceData: InstanceData,\n    folders: Folders,\n    tag: string,\n    saveFullPageOptions: SaveFullPageOptions,\n    isNativeContext: boolean,\n): Promise<ScreenshotOutput> {\n    // 1a. Check if the method is supported in native context\n    if (isNativeContext) {\n        throw new Error('The method saveFullPageScreen is not supported in native context for native mobile apps!')\n    }\n\n    // 1b. Set some variables\n    const {\n        addressBarShadowPadding,\n        formatImageName,\n        isHybridApp,\n        logLevel,\n        savePerInstance,\n        toolBarShadowPadding,\n    } = saveFullPageOptions.wic\n\n    // 1c. Set the method options to the right values\n    const disableCSSAnimation: boolean = saveFullPageOptions.method.disableCSSAnimation !== undefined\n        ? Boolean(saveFullPageOptions.method.disableCSSAnimation)\n        : saveFullPageOptions.wic.disableCSSAnimation\n    const enableLayoutTesting: boolean = saveFullPageOptions.method.enableLayoutTesting !== undefined\n        ? Boolean(saveFullPageOptions.method.enableLayoutTesting)\n        : saveFullPageOptions.wic.enableLayoutTesting\n    const hideScrollBars: boolean = saveFullPageOptions.method.hideScrollBars !== undefined\n        ? Boolean(saveFullPageOptions.method.hideScrollBars)\n        : saveFullPageOptions.wic.hideScrollBars\n    const fullPageScrollTimeout: number = saveFullPageOptions.method.fullPageScrollTimeout !== undefined\n        ? saveFullPageOptions.method.fullPageScrollTimeout!\n        : saveFullPageOptions.wic.fullPageScrollTimeout\n    const hideElements: HTMLElement[] = saveFullPageOptions.method.hideElements || []\n    const removeElements: HTMLElement[] = saveFullPageOptions.method.removeElements || []\n    const hideAfterFirstScroll: HTMLElement[] = saveFullPageOptions.method.hideAfterFirstScroll || []\n    const waitForFontsLoaded: boolean = saveFullPageOptions.method.waitForFontsLoaded !== undefined\n        ? Boolean(saveFullPageOptions.method.waitForFontsLoaded)\n        : saveFullPageOptions.wic.waitForFontsLoaded\n\n    // 2.  Prepare the beforeScreenshot\n    const beforeOptions: BeforeScreenshotOptions = {\n        instanceData,\n        addressBarShadowPadding,\n        disableCSSAnimation,\n        enableLayoutTesting,\n        hideElements,\n        logLevel,\n        noScrollBars: hideScrollBars,\n        removeElements,\n        toolBarShadowPadding,\n        waitForFontsLoaded,\n    }\n    const enrichedInstanceData: BeforeScreenshotResult = await beforeScreenshot(methods.executor, beforeOptions, true)\n    const devicePixelRatio = enrichedInstanceData.dimensions.window.devicePixelRatio\n    const isLandscape = enrichedInstanceData.dimensions.window.isLandscape\n\n    // 3.  Fullpage screenshots are taken per scrolled viewport\n    const fullPageScreenshotOptions: FullPageScreenshotDataOptions = {\n        addressBarShadowPadding: enrichedInstanceData.addressBarShadowPadding,\n        devicePixelRatio: devicePixelRatio || NaN,\n        fullPageScrollTimeout,\n        hideAfterFirstScroll,\n        innerHeight: enrichedInstanceData.dimensions.window.innerHeight || NaN,\n        isAndroid: enrichedInstanceData.isAndroid,\n        isAndroidChromeDriverScreenshot: enrichedInstanceData.isAndroidChromeDriverScreenshot,\n        isAndroidNativeWebScreenshot: enrichedInstanceData.isAndroidNativeWebScreenshot,\n        isHybridApp,\n        isIOS: enrichedInstanceData.isIOS,\n        isLandscape,\n        logLevel: logLevel,\n        screenHeight: enrichedInstanceData.dimensions.window.screenHeight || NaN,\n        screenWidth: enrichedInstanceData.dimensions.window.screenWidth || NaN,\n        toolBarShadowPadding: enrichedInstanceData.toolBarShadowPadding,\n    }\n    const screenshotsData: FullPageScreenshotsData = await getBase64FullPageScreenshotsData(\n        methods.screenShot,\n        methods.executor,\n        fullPageScreenshotOptions,\n    )\n\n    // 4.  Make a fullpage base64 image\n    const fullPageBase64Image: string = await makeFullPageBase64Image(screenshotsData, {\n        devicePixelRatio: devicePixelRatio || NaN,\n        isLandscape,\n    })\n\n    // 5.  The after the screenshot methods\n    const afterOptions: AfterScreenshotOptions = {\n        actualFolder: folders.actualFolder,\n        base64Image: fullPageBase64Image,\n        disableCSSAnimation,\n        enableLayoutTesting,\n        filePath: {\n            browserName: enrichedInstanceData.browserName,\n            deviceName: enrichedInstanceData.deviceName,\n            isMobile: enrichedInstanceData.isMobile,\n            savePerInstance,\n        },\n        fileName: {\n            browserName: enrichedInstanceData.browserName,\n            browserVersion: enrichedInstanceData.browserVersion,\n            deviceName: enrichedInstanceData.deviceName,\n            devicePixelRatio: enrichedInstanceData.dimensions.window.devicePixelRatio || NaN,\n            formatImageName,\n            isMobile: enrichedInstanceData.isMobile,\n            isTestInBrowser: enrichedInstanceData.isTestInBrowser,\n            logName: enrichedInstanceData.logName,\n            name: enrichedInstanceData.name,\n            outerHeight: enrichedInstanceData.dimensions.window.outerHeight || NaN,\n            outerWidth: enrichedInstanceData.dimensions.window.outerWidth || NaN,\n            platformName: enrichedInstanceData.platformName,\n            platformVersion: enrichedInstanceData.platformVersion,\n            screenHeight: enrichedInstanceData.dimensions.window.screenHeight || NaN,\n            screenWidth: enrichedInstanceData.dimensions.window.screenWidth || NaN,\n            tag,\n        },\n        hideElements,\n        hideScrollBars,\n        isLandscape,\n        isNativeContext: false,\n        logLevel,\n        platformName: instanceData.platformName,\n        removeElements,\n    }\n\n    // 6.  Return the data\n    return afterScreenshot(methods.executor, afterOptions!)\n}\n"]}