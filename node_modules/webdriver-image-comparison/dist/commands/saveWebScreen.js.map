{"version":3,"file":"saveWebScreen.js","sourceRoot":"","sources":["../../src/commands/saveWebScreen.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,4DAAgE;AAChE,kDAA6D;AAC7D,uFAA6D;AAC7D,qFAA2D;AAC3D,0DAAoE;AAYpE,SAA8B,aAAa,CACvC,OAAgB,EAChB,YAA0B,EAC1B,OAAgB,EAChB,GAAW,EACX,iBAAoC,EACpC,eAAwB;;;;;;oBAGlB,KACF,iBAAiB,CAAC,GAAG,EADjB,uBAAuB,6BAAA,EAAE,kBAAkB,wBAAA,EAAE,eAAe,qBAAA,EAAE,QAAQ,cAAA,EAAE,eAAe,qBAAA,EAAE,oBAAoB,0BAAA,CAC5F;oBAGnB,mBAAmB,GAAY,iBAAiB,CAAC,MAAM,CAAC,mBAAmB,KAAK,SAAS;wBAC3F,CAAC,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,CAAC,mBAAmB,CAAC;wBACvD,CAAC,CAAC,iBAAiB,CAAC,GAAG,CAAC,mBAAmB,CAAA;oBACzC,mBAAmB,GAAY,iBAAiB,CAAC,MAAM,CAAC,mBAAmB,KAAK,SAAS;wBAC3F,CAAC,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,CAAC,mBAAmB,CAAC;wBACvD,CAAC,CAAC,iBAAiB,CAAC,GAAG,CAAC,mBAAmB,CAAA;oBACzC,cAAc,GAAY,iBAAiB,CAAC,MAAM,CAAC,cAAc,KAAK,SAAS;wBACjF,CAAC,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,CAAC,cAAc,CAAC;wBAClD,CAAC,CAAC,iBAAiB,CAAC,GAAG,CAAC,cAAc,CAAA;oBACpC,YAAY,GAAkB,iBAAiB,CAAC,MAAM,CAAC,YAAY,IAAI,EAAE,CAAA;oBACzE,cAAc,GAAkB,iBAAiB,CAAC,MAAM,CAAC,cAAc,IAAI,EAAE,CAAA;oBAC7E,kBAAkB,GAAY,iBAAiB,CAAC,MAAM,CAAC,kBAAkB,KAAK,SAAS;wBACzF,CAAC,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,CAAC,kBAAkB,CAAC;wBACtD,CAAC,CAAC,iBAAiB,CAAC,GAAG,CAAC,kBAAkB,CAAA;oBAGxC,aAAa,GAA4B;wBAC3C,YAAY,cAAA;wBACZ,uBAAuB,yBAAA;wBACvB,mBAAmB,qBAAA;wBACnB,mBAAmB,qBAAA;wBACnB,YAAY,cAAA;wBACZ,QAAQ,UAAA;wBACR,YAAY,EAAE,cAAc;wBAC5B,cAAc,gBAAA;wBACd,oBAAoB,sBAAA;wBACpB,kBAAkB,oBAAA;qBACrB,CAAA;oBACoD,WAAM,IAAA,6BAAgB,EAAC,OAAO,CAAC,QAAQ,EAAE,aAAa,CAAC,EAAA;;oBAAtG,oBAAoB,GAA2B,SAAuD;oBAExG,WAAW,GAeX,oBAAoB,YAfT,EACX,cAAc,GAcd,oBAAoB,eAdN,EACd,UAAU,GAaV,oBAAoB,WAbV,EAEN,KAWJ,oBAAoB,kBAXsG,EAA5G,gBAAgB,sBAAA,EAAE,WAAW,iBAAA,EAAE,UAAU,gBAAA,EAAE,WAAW,iBAAA,EAAE,WAAW,iBAAA,EAAE,UAAU,gBAAA,EAAE,YAAY,kBAAA,EAAE,WAAW,iBAAA,EAExH,+BAA+B,GAS/B,oBAAoB,gCATW,EAC/B,4BAA4B,GAQ5B,oBAAoB,6BARQ,EAC5B,KAAK,GAOL,oBAAoB,MAPf,EACL,QAAQ,GAMR,oBAAoB,SANZ,EACR,eAAe,GAKf,oBAAoB,gBALL,EACf,OAAO,GAIP,oBAAoB,QAJb,EACP,IAAI,GAGJ,oBAAoB,KAHhB,EACJ,YAAY,GAEZ,oBAAoB,aAFR,EACZ,eAAe,GACf,oBAAoB,gBADL,CACK;oBAGI,WAAM,IAAA,qCAAoB,EAAC,OAAO,CAAC,UAAU,CAAC,EAAA;;oBAApE,WAAW,GAAW,SAA8C;oBAGpE,sBAAsB,GAA4B;wBACpD,gBAAgB,EAAE,gBAAgB,IAAI,GAAG;wBACzC,WAAW,EAAE,WAAW,IAAI,GAAG;wBAC/B,UAAU,EAAE,UAAU,IAAI,GAAG;wBAC7B,+BAA+B,iCAAA;wBAC/B,4BAA4B,8BAAA;wBAC5B,KAAK,OAAA;wBACL,WAAW,aAAA;qBACd,CAAA;oBACK,UAAU,GAAqB,IAAA,yCAAyB,EAAC,WAAW,EAAE,sBAAsB,CAAC,CAAA;oBAEhE,WAAM,IAAA,kCAAsB,EAAC;4BAC5D,kBAAkB,oBAAA;4BAClB,WAAW,aAAA;4BACX,UAAU,YAAA;4BACV,gBAAgB,EAAE,gBAAgB,IAAI,GAAG;4BACzC,KAAK,OAAA;4BACL,WAAW,aAAA;4BACX,QAAQ,UAAA;4BACR,UAAU,YAAA;yBACb,CAAC,EAAA;;oBATI,kBAAkB,GAAW,SASjC;oBAGI,YAAY,GAA2B;wBACzC,YAAY,EAAE,OAAO,CAAC,YAAY;wBAClC,WAAW,EAAE,kBAAkB;wBAC/B,mBAAmB,qBAAA;wBACnB,mBAAmB,qBAAA;wBACnB,QAAQ,EAAE;4BACN,WAAW,aAAA;4BACX,UAAU,YAAA;4BACV,QAAQ,UAAA;4BACR,eAAe,iBAAA;yBAClB;wBACD,QAAQ,EAAE;4BACN,WAAW,aAAA;4BACX,cAAc,gBAAA;4BACd,UAAU,YAAA;4BACV,gBAAgB,EAAE,gBAAgB,IAAI,GAAG;4BACzC,eAAe,iBAAA;4BACf,QAAQ,UAAA;4BACR,eAAe,iBAAA;4BACf,OAAO,SAAA;4BACP,IAAI,MAAA;4BACJ,WAAW,EAAE,WAAW,IAAI,GAAG;4BAC/B,UAAU,EAAE,UAAU,IAAI,GAAG;4BAC7B,YAAY,cAAA;4BACZ,eAAe,iBAAA;4BACf,YAAY,EAAE,YAAY,IAAI,GAAG;4BACjC,WAAW,EAAE,WAAW,IAAI,GAAG;4BAC/B,GAAG,KAAA;yBACN;wBACD,YAAY,cAAA;wBACZ,cAAc,gBAAA;wBACd,WAAW,aAAA;wBACX,eAAe,iBAAA;wBACf,QAAQ,UAAA;wBACR,YAAY,EAAE,YAAY,CAAC,YAAY;wBACvC,cAAc,gBAAA;qBACjB,CAAA;oBAGD,WAAO,IAAA,4BAAe,EAAC,OAAO,CAAC,QAAQ,EAAE,YAAY,CAAC,EAAA;;;;CACzD;AA/HD,gCA+HC","sourcesContent":["import { takeBase64Screenshot } from '../methods/screenshots.js'\nimport { makeCroppedBase64Image } from '../methods/images.js'\nimport beforeScreenshot from '../helpers/beforeScreenshot.js'\nimport afterScreenshot from '../helpers/afterScreenshot.js'\nimport { determineScreenRectangles } from '../methods/rectangles.js'\nimport type { Methods } from '../methods/methods.interfaces.js'\nimport type { Folders } from '../base.interfaces.js'\nimport type { SaveScreenOptions } from './screen.interfaces.js'\nimport type { BeforeScreenshotOptions, BeforeScreenshotResult } from '../helpers/beforeScreenshot.interfaces.js'\nimport type { InstanceData } from '../methods/instanceData.interfaces.js'\nimport type { AfterScreenshotOptions, ScreenshotOutput } from '../helpers/afterScreenshot.interfaces.js'\nimport type { RectanglesOutput, ScreenRectanglesOptions } from '../methods/rectangles.interfaces.js'\n\n/**\n * Saves an image of the viewport of the screen\n */\nexport default async function saveWebScreen(\n    methods: Methods,\n    instanceData: InstanceData,\n    folders: Folders,\n    tag: string,\n    saveScreenOptions: SaveScreenOptions,\n    isNativeContext: boolean,\n): Promise<ScreenshotOutput> {\n    // 1a. Set some variables\n    const { addressBarShadowPadding, addIOSBezelCorners, formatImageName, logLevel, savePerInstance, toolBarShadowPadding } =\n        saveScreenOptions.wic\n\n    // 1b. Set the method options to the right values\n    const disableCSSAnimation: boolean = saveScreenOptions.method.disableCSSAnimation !== undefined\n        ? Boolean(saveScreenOptions.method.disableCSSAnimation)\n        : saveScreenOptions.wic.disableCSSAnimation\n    const enableLayoutTesting: boolean = saveScreenOptions.method.enableLayoutTesting !== undefined\n        ? Boolean(saveScreenOptions.method.enableLayoutTesting)\n        : saveScreenOptions.wic.enableLayoutTesting\n    const hideScrollBars: boolean = saveScreenOptions.method.hideScrollBars !== undefined\n        ? Boolean(saveScreenOptions.method.hideScrollBars)\n        : saveScreenOptions.wic.hideScrollBars\n    const hideElements: HTMLElement[] = saveScreenOptions.method.hideElements || []\n    const removeElements: HTMLElement[] = saveScreenOptions.method.removeElements || []\n    const waitForFontsLoaded: boolean = saveScreenOptions.method.waitForFontsLoaded !== undefined\n        ? Boolean(saveScreenOptions.method.waitForFontsLoaded)\n        : saveScreenOptions.wic.waitForFontsLoaded\n\n    // 2.  Prepare the beforeScreenshot\n    const beforeOptions: BeforeScreenshotOptions = {\n        instanceData,\n        addressBarShadowPadding,\n        disableCSSAnimation,\n        enableLayoutTesting,\n        hideElements,\n        logLevel,\n        noScrollBars: hideScrollBars,\n        removeElements,\n        toolBarShadowPadding,\n        waitForFontsLoaded,\n    }\n    const enrichedInstanceData: BeforeScreenshotResult = await beforeScreenshot(methods.executor, beforeOptions)\n    const {\n        browserName,\n        browserVersion,\n        deviceName,\n        dimensions: {\n            window: { devicePixelRatio, innerHeight, innerWidth, isLandscape, outerHeight, outerWidth, screenHeight, screenWidth },\n        },\n        isAndroidChromeDriverScreenshot,\n        isAndroidNativeWebScreenshot,\n        isIOS,\n        isMobile,\n        isTestInBrowser,\n        logName,\n        name,\n        platformName,\n        platformVersion,\n    } = enrichedInstanceData\n\n    // 3.  Take the screenshot\n    const base64Image: string = await takeBase64Screenshot(methods.screenShot)\n\n    // Determine the rectangles\n    const screenRectangleOptions: ScreenRectanglesOptions = {\n        devicePixelRatio: devicePixelRatio || NaN,\n        innerHeight: innerHeight || NaN,\n        innerWidth: innerWidth || NaN,\n        isAndroidChromeDriverScreenshot,\n        isAndroidNativeWebScreenshot,\n        isIOS,\n        isLandscape,\n    }\n    const rectangles: RectanglesOutput = determineScreenRectangles(base64Image, screenRectangleOptions)\n    // 4.  Make a cropped base64 image\n    const croppedBase64Image: string = await makeCroppedBase64Image({\n        addIOSBezelCorners,\n        base64Image,\n        deviceName,\n        devicePixelRatio: devicePixelRatio || NaN,\n        isIOS,\n        isLandscape,\n        logLevel,\n        rectangles,\n    })\n\n    // 5.  The after the screenshot methods\n    const afterOptions: AfterScreenshotOptions = {\n        actualFolder: folders.actualFolder,\n        base64Image: croppedBase64Image,\n        disableCSSAnimation,\n        enableLayoutTesting,\n        filePath: {\n            browserName,\n            deviceName,\n            isMobile,\n            savePerInstance,\n        },\n        fileName: {\n            browserName,\n            browserVersion,\n            deviceName,\n            devicePixelRatio: devicePixelRatio || NaN,\n            formatImageName,\n            isMobile,\n            isTestInBrowser,\n            logName,\n            name,\n            outerHeight: outerHeight || NaN,\n            outerWidth: outerWidth || NaN,\n            platformName,\n            platformVersion,\n            screenHeight: screenHeight || NaN,\n            screenWidth: screenWidth || NaN,\n            tag,\n        },\n        hideElements,\n        hideScrollBars,\n        isLandscape,\n        isNativeContext,\n        logLevel,\n        platformName: instanceData.platformName,\n        removeElements,\n    }\n\n    // 6.  Return the data\n    return afterScreenshot(methods.executor, afterOptions)\n}\n"]}