{"version":3,"file":"afterScreenshot.js","sourceRoot":"","sources":["../../src/helpers/afterScreenshot.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uCAAgC;AAEhC,6FAAmE;AACnE,yGAA+E;AAC/E,+CAA8C;AAC9C,uCAA4E;AAC5E,kDAAsD;AAItD,qGAA2E;AAC3E,2DAA+C;AAC/C,6GAAmF;AAMnF,SAA8B,eAAe,CAAC,QAAkB,EAAE,OAA+B;;;;;;oBAEzF,YAAY,GAaZ,OAAO,aAbK,EACZ,WAAW,GAYX,OAAO,YAZI,EACX,mBAAmB,GAWnB,OAAO,oBAXY,EACnB,mBAAmB,GAUnB,OAAO,oBAVY,EACT,eAAe,GASzB,OAAO,SATkB,EACzB,QAAQ,GAQR,OAAO,SARC,EACR,YAAY,GAOZ,OAAO,aAPK,EACI,YAAY,GAM5B,OAAO,eANqB,EAC5B,WAAW,GAKX,OAAO,YALI,EACX,eAAe,GAIf,OAAO,gBAJQ,EACf,QAAQ,GAGR,OAAO,SAHC,EACR,YAAY,GAEZ,OAAO,aAFK,EACZ,cAAc,GACd,OAAO,eADO,CACP;oBAGL,IAAI,GAAG,IAAA,2BAAgB,EAAC,YAAY,EAAE,QAAQ,CAAC,CAAA;oBAG/C,QAAQ,GAAG,IAAA,yBAAc,EAAC,eAAe,CAAC,CAAA;oBAGhD,WAAM,IAAA,2BAAe,EAAC,WAAW,EAAE,IAAA,gBAAI,EAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,EAAA;;oBAAxD,SAAwD,CAAA;yBAEpD,CAAC,eAAe,EAAhB,eAAgB;yBAEZ,YAAY,EAAZ,cAAY;oBACZ,WAAM,QAAQ,CAAC,2BAAc,EAAE,CAAC,YAAY,CAAC,EAAA;;oBAA7C,SAA6C,CAAA;;;yBAI7C,CAAA,CAAC,YAAY,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,cAAc,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA,EAA1F,cAA0F;;;;oBAEtF,WAAM,QAAQ,CAAC,+BAAkB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE,cAAc,EAAE,EAAE,KAAK,CAAC,EAAA;;oBAAzF,SAAyF,CAAA;;;;oBAEzF,IAAI,QAAQ,KAAK,6BAAQ,CAAC,KAAK,IAAI,QAAQ,KAAK,6BAAQ,CAAC,IAAI,EAAE,CAAC;wBAC5D,OAAO,CAAC,GAAG,CACP,mBAAmB,EACnB,yOAKd,GAAC,oIAGV,CACoB,CAAA;oBACL,CAAC;;;yBAKL,CAAA,mBAAmB,IAAI,IAAA,wBAAa,EAAC,YAAY,CAAC,CAAA,EAAlD,cAAkD;oBAClD,WAAM,QAAQ,CAAC,iCAAoB,EAAE,4BAAa,CAAC,EAAA;;oBAAnD,SAAmD,CAAA;;;yBAInD,mBAAmB,EAAnB,eAAmB;oBACnB,WAAM,QAAQ,CAAC,mCAAsB,EAAE,CAAC,mBAAmB,CAAC,EAAA;;oBAA5D,SAA4D,CAAA;;yBAMpE,WAAO;wBACH,gBAAgB,EAAE,eAAe,CAAC,gBAAgB;wBAClD,QAAQ,UAAA;wBACR,WAAW,aAAA;wBACX,IAAI,MAAA;qBACP,EAAA;;;;CACJ;AAzED,kCAyEC","sourcesContent":["import { join } from 'node:path'\n\nimport hideScrollBars from '../clientSideScripts/hideScrollbars.js'\nimport removeElementFromDom from '../clientSideScripts/removeElementFromDom.js'\nimport { CUSTOM_CSS_ID } from './constants.js'\nimport { checkIsMobile, formatFileName, getAndCreatePath } from './utils.js'\nimport { saveBase64Image } from '../methods/images.js'\n\nimport type { Executor } from '../methods/methods.interfaces'\nimport type { AfterScreenshotOptions, ScreenshotOutput } from './afterScreenshot.interfaces'\nimport hideRemoveElements from '../clientSideScripts/hideRemoveElements.js'\nimport { LogLevel } from './options.interfaces'\nimport toggleTextTransparency from '../clientSideScripts/toggleTextTransparency.js'\n\n/**\n * Methods that need to be executed after a screenshot has been taken\n * to set all back to the original state\n */\nexport default async function afterScreenshot(executor: Executor, options: AfterScreenshotOptions): Promise<ScreenshotOutput> {\n    const {\n        actualFolder,\n        base64Image,\n        disableCSSAnimation,\n        enableLayoutTesting,\n        fileName: fileNameOptions,\n        filePath,\n        hideElements,\n        hideScrollBars: noScrollBars,\n        isLandscape,\n        isNativeContext,\n        logLevel,\n        platformName,\n        removeElements,\n    } = options\n\n    // Get the path\n    const path = getAndCreatePath(actualFolder, filePath)\n\n    // Get the filePath\n    const fileName = formatFileName(fileNameOptions)\n\n    // Save the screenshot\n    await saveBase64Image(base64Image, join(path, fileName))\n\n    if (!isNativeContext){\n        // Show the scrollbars again\n        if (noScrollBars) {\n            await executor(hideScrollBars, !noScrollBars)\n        }\n\n        // Show elements again\n        if ((hideElements && hideElements.length > 0) || (removeElements && removeElements.length > 0)) {\n            try {\n                await executor(hideRemoveElements, { hide: hideElements, remove: removeElements }, false)\n            } catch (e) {\n                if (logLevel === LogLevel.debug || logLevel === LogLevel.warn) {\n                    console.log(\n                        '\\x1b[33m%s\\x1b[0m',\n                        `\n#####################################################################################\n WARNING:\n (One of) the elements that needed to be hidden or removed could not be found on the\n page and caused this error\n Error: ${e}\n We made sure the test didn't break.\n#####################################################################################\n`,\n                    )\n                }\n            }\n        }\n\n        // Remove the custom set css\n        if (disableCSSAnimation || checkIsMobile(platformName)) {\n            await executor(removeElementFromDom, CUSTOM_CSS_ID)\n        }\n\n        // Show the text again\n        if (enableLayoutTesting){\n            await executor(toggleTextTransparency, !enableLayoutTesting)\n        }\n\n    }\n\n    // Return the needed data\n    return {\n        devicePixelRatio: fileNameOptions.devicePixelRatio,\n        fileName,\n        isLandscape,\n        path,\n    }\n}\n"]}