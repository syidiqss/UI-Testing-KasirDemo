import type { TabbableOptions } from '../commands/tabbable.interfaces';
export interface ClassOptions {
    addressBarShadowPadding?: number;
    autoElementScroll?: boolean;
    addIOSBezelCorners?: boolean;
    clearRuntimeFolder?: boolean;
    formatImageName?: string;
    isHybridApp?: boolean;
    logLevel?: LogLevel;
    savePerInstance?: boolean;
    toolBarShadowPadding?: number;
    waitForFontsLoaded?: boolean;
    autoSaveBaseline?: boolean;
    screenshotPath?: string | ((options: ClassOptions) => string);
    baselineFolder?: string | ((options: ClassOptions) => string);
    disableCSSAnimation?: boolean;
    enableLayoutTesting?: boolean;
    fullPageScrollTimeout?: number;
    hideScrollBars?: boolean;
    blockOutSideBar?: boolean;
    blockOutStatusBar?: boolean;
    blockOutToolBar?: boolean;
    ignoreAlpha?: boolean;
    ignoreAntialiasing?: boolean;
    ignoreColors?: boolean;
    ignoreLess?: boolean;
    ignoreNothing?: boolean;
    rawMisMatchPercentage?: boolean;
    returnAllCompareData?: boolean;
    saveAboveTolerance?: number;
    scaleImagesToSameSize?: boolean;
    tabbableOptions?: TabbableOptions;
}
export interface DefaultOptions {
    addressBarShadowPadding: number;
    autoElementScroll: boolean;
    addIOSBezelCorners: boolean;
    autoSaveBaseline: boolean;
    clearFolder: boolean;
    compareOptions: CompareOptions;
    disableCSSAnimation: boolean;
    enableLayoutTesting: boolean;
    formatImageName: string;
    fullPageScrollTimeout: number;
    hideScrollBars: boolean;
    isHybridApp: boolean;
    logLevel: LogLevel;
    savePerInstance: boolean;
    tabbableOptions: TabbableOptions;
    toolBarShadowPadding: number;
    waitForFontsLoaded: boolean;
}
interface CompareOptions {
    blockOutSideBar: boolean;
    blockOutStatusBar: boolean;
    blockOutToolBar: boolean;
    ignoreAlpha: boolean;
    ignoreAntialiasing: boolean;
    ignoreColors: boolean;
    ignoreLess: boolean;
    ignoreNothing: boolean;
    rawMisMatchPercentage: boolean;
    returnAllCompareData: boolean;
    saveAboveTolerance: number;
    scaleImagesToSameSize: boolean;
}
export declare enum LogLevel {
    debug = "debug",
    info = "info",
    warn = "warn",
    silent = "silent"
}
export {};
//# sourceMappingURL=options.interfaces.d.ts.map