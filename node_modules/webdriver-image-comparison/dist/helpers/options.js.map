{"version":3,"file":"options.js","sourceRoot":"","sources":["../../src/helpers/options.ts"],"names":[],"mappings":"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","sourcesContent":["import { DEFAULT_FORMAT_STRING, DEFAULT_SHADOW, DEFAULT_TABBABLE_OPTIONS, FULL_PAGE_SCROLL_TIMEOUT } from './constants.js'\nimport type { ClassOptions, DefaultOptions } from './options.interfaces'\nimport { LogLevel } from './options.interfaces'\nimport type { MethodImageCompareCompareOptions, ScreenMethodImageCompareCompareOptions } from '../methods/images.interfaces'\n\n/**\n * Determine the default options\n */\nexport function defaultOptions(options: ClassOptions): DefaultOptions {\n    return {\n        /**\n         * Module options\n         */\n        addressBarShadowPadding: options.addressBarShadowPadding ?? DEFAULT_SHADOW.ADDRESS_BAR,\n        autoElementScroll: Object.prototype.hasOwnProperty.call(options, 'autoElementScroll')\n            ? Boolean(options.autoElementScroll)\n            : true,\n        addIOSBezelCorners: options.addIOSBezelCorners ?? false,\n        autoSaveBaseline: options.autoSaveBaseline ?? true,\n        clearFolder: options.clearRuntimeFolder ?? false,\n        formatImageName: options.formatImageName ?? DEFAULT_FORMAT_STRING,\n        isHybridApp: options.isHybridApp ?? false,\n        logLevel: options.logLevel ?? LogLevel.info,\n        savePerInstance: options.savePerInstance ?? false,\n        toolBarShadowPadding: options.toolBarShadowPadding ?? DEFAULT_SHADOW.TOOL_BAR,\n\n        /**\n         * Module and method options\n         */\n        disableCSSAnimation: options.disableCSSAnimation ?? false,\n        enableLayoutTesting: options.enableLayoutTesting ?? false,\n        fullPageScrollTimeout: options.fullPageScrollTimeout ?? FULL_PAGE_SCROLL_TIMEOUT,\n        hideScrollBars: Object.prototype.hasOwnProperty.call(options, 'hideScrollBars')\n            ? Boolean(options.hideScrollBars)\n            : true,\n        waitForFontsLoaded: options.waitForFontsLoaded ?? true,\n\n        /**\n         * Compare options\n         */\n        compareOptions: {\n            blockOutSideBar: options.blockOutSideBar ?? true,\n            blockOutStatusBar: options.blockOutStatusBar ?? true,\n            blockOutToolBar: options.blockOutToolBar ?? true,\n            ignoreAlpha: options.ignoreAlpha ?? false,\n            ignoreAntialiasing: options.ignoreAntialiasing ?? false,\n            ignoreColors: options.ignoreColors ?? false,\n            ignoreLess: options.ignoreLess ?? false,\n            ignoreNothing: options.ignoreNothing ?? false,\n            rawMisMatchPercentage: options.rawMisMatchPercentage ?? false,\n            returnAllCompareData: options.returnAllCompareData ?? false,\n            saveAboveTolerance: options.saveAboveTolerance ?? 0,\n            scaleImagesToSameSize: options.scaleImagesToSameSize ?? false,\n        },\n\n        /**\n         * Tabbable options\n         */\n        tabbableOptions: {\n            circle: {\n                ...DEFAULT_TABBABLE_OPTIONS.circle,\n                ...(options.tabbableOptions && options.tabbableOptions.circle ? options.tabbableOptions.circle : {}),\n            },\n            line: {\n                ...DEFAULT_TABBABLE_OPTIONS.line,\n                ...(options.tabbableOptions && options.tabbableOptions.line ? options.tabbableOptions.line : {}),\n            },\n        },\n    }\n}\n\n/**\n * Determine the screen method compare options\n */\nexport function screenMethodCompareOptions(\n    options: ScreenMethodImageCompareCompareOptions,\n): ScreenMethodImageCompareCompareOptions {\n    return {\n        ...('blockOutSideBar' in options ? { blockOutSideBar: options.blockOutSideBar } : {}),\n        ...('blockOutStatusBar' in options ? { blockOutStatusBar: options.blockOutStatusBar } : {}),\n        ...('blockOutToolBar' in options ? { blockOutToolBar: options.blockOutToolBar } : {}),\n        ...methodCompareOptions(options),\n    }\n}\n\n/**\n * Determine the method compare options\n */\nexport function methodCompareOptions(options: any): MethodImageCompareCompareOptions {\n    return {\n        ...('blockOut' in options ? { blockOut: options.blockOut } : {}),\n        ...('ignoreAlpha' in options ? { ignoreAlpha: options.ignoreAlpha } : {}),\n        ...('ignoreAntialiasing' in options ? { ignoreAntialiasing: options.ignoreAntialiasing } : {}),\n        ...('ignoreColors' in options ? { ignoreColors: options.ignoreColors } : {}),\n        ...('ignoreLess' in options ? { ignoreLess: options.ignoreLess } : {}),\n        ...('ignoreNothing' in options ? { ignoreNothing: options.ignoreNothing } : {}),\n        ...('rawMisMatchPercentage' in options ? { rawMisMatchPercentage: options.rawMisMatchPercentage } : {}),\n        ...('returnAllCompareData' in options ? { returnAllCompareData: options.returnAllCompareData } : {}),\n        ...('saveAboveTolerance' in options ? { saveAboveTolerance: options.saveAboveTolerance } : {}),\n        ...('scaleImagesToSameSize' in options ? { scaleImagesToSameSize: options.scaleImagesToSameSize } : {}),\n    }\n}\n"]}