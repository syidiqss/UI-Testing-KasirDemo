{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/helpers/utils.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uCAAgC;AAChC,+CAA8D;AAC9D,qCAAwC;AAaxC,SAAgB,gBAAgB,CAAC,MAAc,EAAE,OAAgC;IAEzE,IAAA,KAIA,OAAO,YAJgB,EAAvB,WAAW,mBAAG,wBAAS,KAAA,EACvB,KAGA,OAAO,WAHe,EAAtB,UAAU,mBAAG,wBAAS,KAAA,EACtB,QAAQ,GAER,OAAO,SAFC,EACR,eAAe,GACf,OAAO,gBADQ,CACR;IACX,IAAM,YAAY,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,UAAG,sBAAO,cAAI,WAAW,CAAE,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;IAC7F,IAAM,SAAS,GAAG,eAAe,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAA;IACrD,IAAM,UAAU,GAAG,IAAA,gBAAI,EAAC,MAAM,EAAE,SAAS,CAAC,CAAA;IAE1C,IAAA,wBAAa,EAAC,UAAU,CAAC,CAAA;IAEzB,OAAO,UAAU,CAAA;AACrB,CAAC;AAdD,4CAcC;AAKD,SAAgB,cAAc,CAAC,OAA8B;IAErD,IAAA,KAcA,OAAO,YAdgB,EAAvB,WAAW,mBAAG,wBAAS,KAAA,EACvB,KAaA,OAAO,eAbmB,EAA1B,cAAc,mBAAG,wBAAS,KAAA,EAC1B,KAYA,OAAO,WAZe,EAAtB,UAAU,mBAAG,wBAAS,KAAA,EACtB,gBAAgB,GAWhB,OAAO,iBAXS,EAChB,QAAQ,GAUR,OAAO,SAVC,EACR,YAAY,GASZ,OAAO,aATK,EACZ,WAAW,GAQX,OAAO,YARI,EACX,KAOA,OAAO,YAPmB,EAA1B,WAAW,mBAAG,YAAY,KAAA,EAC1B,KAMA,OAAO,WANiB,EAAxB,UAAU,mBAAG,WAAW,KAAA,EACxB,eAAe,GAKf,OAAO,gBALQ,EACf,IAAI,GAIJ,OAAO,KAJH,EACJ,YAAY,GAGZ,OAAO,aAHK,EACZ,eAAe,GAEf,OAAO,gBAFQ,EACf,GAAG,GACH,OAAO,IADJ,CACI;IACX,IAAM,QAAQ,GAAuB;QACjC,WAAW,aAAA;QACX,cAAc,gBAAA;QACd,UAAU,YAAA;QACV,GAAG,EAAE,gBAAgB;QACrB,MAAM,EAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,WAAW;QAC5C,OAAO,EAAE,OAAO,CAAC,OAAO;QACxB,MAAM,EAAE,QAAQ,IAAI,eAAe,CAAC,CAAC,CAAC,WAAW,CAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,wBAAS;QACjF,IAAI,EAAE,IAAI;QACV,YAAY,cAAA;QACZ,eAAe,iBAAA;QACf,GAAG,KAAA;QACH,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,UAAU;KAC7C,CAAA;IAED,IAAI,QAAQ,GAAG,OAAO,CAAC,eAAe,CAAA;IAEtC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAC,KAAa;QAGxC,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,WAAI,KAAK,MAAG,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAA;IAC9D,CAAC,CAAC,CAAA;IAEF,OAAO,UAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,SAAM,CAAA;AAC/C,CAAC;AAzCD,wCAyCC;AAKD,SAAgB,aAAa,CAAC,YAAoB;IAC9C,OAAO,cAAc,CAAC,YAAY,CAAC,IAAI,UAAU,CAAC,YAAY,CAAC,CAAA;AACnE,CAAC;AAFD,sCAEC;AAKD,SAAgB,cAAc,CAAC,YAAoB;IAC/C,OAAO,YAAY,CAAC,WAAW,EAAE,KAAK,wBAAS,CAAC,OAAO,CAAA;AAC3D,CAAC;AAFD,wCAEC;AAKD,SAAgB,UAAU,CAAC,YAAoB;IAC3C,OAAO,YAAY,CAAC,WAAW,EAAE,KAAK,wBAAS,CAAC,GAAG,CAAA;AACvD,CAAC;AAFD,gCAEC;AAKD,SAAgB,kBAAkB,CAAC,WAAmB;IAClD,OAAO,WAAW,KAAK,EAAE,CAAA;AAC7B,CAAC;AAFD,gDAEC;AAKD,SAAgB,wBAAwB,CAAC,YAAoB,EAAE,WAAmB;IAC9E,OAAO,aAAa,CAAC,YAAY,CAAC,IAAI,kBAAkB,CAAC,WAAW,CAAC,CAAA;AACzE,CAAC;AAFD,4DAEC;AAKD,SAAgB,+BAA+B,CAAC,YAAoB,EAAE,mBAA4B;IAC9F,OAAO,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,mBAAmB,CAAC,IAAI,KAAK,CAAA;AACzE,CAAC;AAFD,0EAEC;AAKD,SAAgB,kCAAkC,CAAC,YAAoB,EAAE,mBAA4B;IACjG,OAAO,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,+BAA+B,CAAC,YAAY,EAAE,mBAAmB,CAAC,CAAA;AAC9G,CAAC;AAFD,gFAEC;AAKD,SAAgB,0BAA0B,CAAC,OAA0C;IACzE,IAAA,YAAY,GAAkF,OAAO,aAAzF,EAAE,WAAW,GAAqE,OAAO,YAA5E,EAAE,mBAAmB,GAAgD,OAAO,oBAAvD,EAAE,uBAAuB,GAAuB,OAAO,wBAA9B,EAAE,gBAAgB,GAAK,OAAO,iBAAZ,CAAY;IAC7G,IAAM,qBAAqB,GAAG,wBAAwB,CAAC,YAAY,EAAE,WAAW,CAAC,CAAA;IACjF,IAAM,4BAA4B,GAAG,+BAA+B,CAAC,YAAY,EAAE,mBAAmB,CAAC,CAAA;IACvG,IAAM,SAAS,GAAG,cAAc,CAAC,YAAY,CAAC,CAAA;IAC9C,IAAM,KAAK,GAAG,UAAU,CAAC,YAAY,CAAC,CAAA;IAEtC,OAAO,qBAAqB,IAAI,CAAC,CAAC,4BAA4B,IAAI,SAAS,CAAC,IAAI,KAAK,CAAC,IAAI,gBAAgB;QACtG,CAAC,CAAC,uBAAuB;QACzB,CAAC,CAAC,CAAC,CAAA;AACX,CAAC;AAVD,gEAUC;AAKD,SAAgB,uBAAuB,CAAC,OAAuC;IACnE,IAAA,YAAY,GAA0D,OAAO,aAAjE,EAAE,WAAW,GAA6C,OAAO,YAApD,EAAE,oBAAoB,GAAuB,OAAO,qBAA9B,EAAE,gBAAgB,GAAK,OAAO,iBAAZ,CAAY;IAErF,OAAO,wBAAwB,CAAC,YAAY,EAAE,WAAW,CAAC,IAAI,UAAU,CAAC,YAAY,CAAC,IAAI,gBAAgB;QACtG,CAAC,CAAC,UAAU,CAAC,YAAY,CAAC;YACtB,CAAC;gBACD,oBAAoB,GAAG,CAAC;YACxB,CAAC,CAAC,oBAAoB;QAC1B,CAAC,CAAC,CAAC,CAAA;AACX,CAAC;AATD,0DASC;AAKD,SAAgB,gBAAgB,CAAI,IAAO,EAAE,gBAAwB;IAGjE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,OAAA,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAlG,CAAkG,CAAC,CAAA;IAElI,OAAO,IAAI,CAAA;AACf,CAAC;AAND,4CAMC;AAKD,SAAsB,OAAO,CAAC,YAAoB;;;YAE9C,WAAO,IAAI,OAAO,CAAC,UAAC,OAAO,IAAK,OAAA,UAAU,CAAC,cAAM,OAAA,OAAO,EAAE,EAAT,CAAS,EAAE,YAAY,CAAC,EAAzC,CAAyC,CAAC,EAAA;;;CAC7E;AAHD,0BAGC;AAKD,SAAgB,iBAAiB,CAAC,UAAkB,EAAE,iBAAqB;IAArB,kCAAA,EAAA,qBAAqB;IACvE,OAAO;QACH,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,GAAG,iBAAiB,CAAC;QAC1F,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,GAAG,iBAAiB,CAAC;KAC5F,CAAA;AACL,CAAC;AALD,8CAKC;AAKD,SAAgB,mBAAmB,CAAC,UAAkB,EAAE,gBAAgD;IACpG,IAAM,cAAc,GAAG,iBAAiB,CAAC,UAAU,CAAC,CAAA;IACpD,IAAM,gBAAgB,GAAG,cAAc,CAAC,KAAK,GAAG,gBAAgB,CAAC,KAAK,CAAA;IAEtE,OAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAA;AACvC,CAAC;AALD,kDAKC;AAKD,SAAgB,qBAAqB,CAAC,oBAA4B;IAC9D,IAAI,YAAY,EAAE,eAAe,CAAA;IAEjC,QAAQ,oBAAoB,EAAE,CAAC;QAC/B,KAAK,SAAS;YACV,YAAY,GAAG,kCAAkC,CAAA;YACjD,eAAe,GAAG,qCAAqC,CAAA;YACvD,MAAK;QACT,KAAK,UAAU;YACX,YAAY,GAAG,kCAAkC,CAAA;YACjD,eAAe,GAAG,qCAAqC,CAAA;YACvD,MAAK;QACT,KAAK,aAAa;YACd,YAAY,GAAG,iBAAiB,CAAA;YAChC,eAAe,GAAG,oBAAoB,CAAA;YACtC,MAAK;QACT,KAAK,UAAU;YACX,YAAY,GAAG,uBAAuB,CAAA;YACtC,eAAe,GAAG,0BAA0B,CAAA;YAC5C,MAAK;QACT,KAAK,UAAU;YACX,YAAY,GAAG,uBAAuB,CAAA;YACtC,eAAe,GAAG,0BAA0B,CAAA;YAC5C,MAAK;QACT,KAAK,aAAa;YACd,YAAY,GAAG,kCAAkC,CAAA;YACjD,eAAe,GAAG,qCAAqC,CAAA;YACvD,MAAK;QACT,KAAK,gBAAgB;YACjB,YAAY,GAAG,oBAAoB,CAAA;YACnC,eAAe,GAAG,uBAAuB,CAAA;YACzC,MAAK;QACT,KAAK,UAAU;YACX,YAAY,GAAG,0BAA0B,CAAA;YACzC,eAAe,GAAG,2DAA2D,CAAA;YAC7E,MAAK;QACT,KAAK,cAAc;YACf,YAAY,GAAG,kBAAkB,CAAA;YACjC,eAAe,GAAG,kCAAkC,CAAA;YACpD,MAAK;QACT,KAAK,aAAa;YACd,YAAY,GAAG,0BAA0B,CAAA;YACzC,eAAe,GAAG,2DAA2D,CAAA;YAC7E,MAAK;QACT,KAAK,gBAAgB;YACjB,YAAY,GAAG,oBAAoB,CAAA;YACnC,eAAe,GAAG,mDAAmD,CAAA;YACrE,MAAK;QACT,KAAK,UAAU;YACX,YAAY,GAAG,mCAAmC,CAAA;YAClD,eAAe,GAAG,2DAA2D,CAAA;YAC7E,MAAK;QACT,KAAK,cAAc;YACf,YAAY,GAAG,kBAAkB,CAAA;YACjC,eAAe,GAAG,kCAAkC,CAAA;YACpD,MAAK;QACT,KAAK,aAAa;YACd,YAAY,GAAG,mCAAmC,CAAA;YAClD,eAAe,GAAG,2DAA2D,CAAA;YAC7E,MAAK;QACT,KAAK,gBAAgB;YACjB,YAAY,GAAG,iCAAiC,CAAA;YAChD,eAAe,GAAG,mDAAmD,CAAA;YACrE,MAAK;QACT,KAAK,UAAU;YACX,YAAY,GAAG,mCAAmC,CAAA;YAClD,eAAe,GAAG,2DAA2D,CAAA;YAC7E,MAAK;QACT,KAAK,cAAc;YACf,YAAY,GAAG,iCAAiC,CAAA;YAChD,eAAe,GAAG,mDAAmD,CAAA;YACrE,MAAK;QACT,KAAK,aAAa;YACd,YAAY,GAAG,iBAAiB,CAAA;YAChC,eAAe,GAAG,oBAAoB,CAAA;YACtC,MAAK;QACT,KAAK,gBAAgB;YACjB,YAAY,GAAG,oBAAoB,CAAA;YACnC,eAAe,GAAG,uBAAuB,CAAA;YACzC,MAAK;QACT,KAAK,UAAU;YACX,YAAY,GAAG,cAAc,CAAA;YAC7B,eAAe,GAAG,iBAAiB,CAAA;YACnC,MAAK;QAET,KAAK,UAAU;YACX,YAAY,GAAG,iBAAiB,CAAA;YAChC,eAAe,GAAG,oBAAoB,CAAA;YACtC,MAAK;QACT,KAAK,SAAS;YACV,YAAY,GAAG,2BAA2B,CAAA;YAC1C,eAAe,GAAG,8BAA8B,CAAA;YAChD,MAAK;QACT,KAAK,WAAW;YACZ,YAAY,GAAG,eAAe,CAAA;YAC9B,eAAe,GAAG,kBAAkB,CAAA;YACpC,MAAK;QACT,KAAK,YAAY;YACb,YAAY,GAAG,gBAAgB,CAAA;YAC/B,eAAe,GAAG,mBAAmB,CAAA;YACrC,MAAK;IACT,CAAC;IAED,IAAI,CAAC,YAAY,IAAI,CAAC,eAAe,EAAE,CAAC;QACpC,MAAM,IAAI,KAAK,CAAC,qDAA8C,oBAAoB,CAAE,CAAC,CAAA;IACzF,CAAC;IAED,OAAO,EAAE,YAAY,cAAA,EAAE,eAAe,iBAAA,EAAE,CAAA;AAC5C,CAAC;AA5GD,sDA4GC;AAKD,SAAgB,QAAQ,CAAC,IAAY;IACjC,OAAO,CAAC,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI,OAAO,IAAI,KAAK,UAAU,CAAA;AACpF,CAAC;AAFD,4BAEC","sourcesContent":["import { join } from 'node:path'\nimport { DESKTOP, NOT_KNOWN, PLATFORMS } from './constants.js'\nimport { ensureDirSync } from 'fs-extra'\nimport type {\n    FormatFileDefaults,\n    FormatFileNameOptions,\n    GetAddressBarShadowPaddingOptions,\n    GetAndCreatePathOptions,\n    GetToolBarShadowPaddingOptions,\n    ScreenshotSize,\n} from './utils.interfaces'\n\n/**\n * Get and create a folder\n */\nexport function getAndCreatePath(folder: string, options: GetAndCreatePathOptions): string {\n    const {\n        browserName = NOT_KNOWN,\n        deviceName = NOT_KNOWN,\n        isMobile,\n        savePerInstance,\n    } = options\n    const instanceName = (isMobile ? deviceName : `${DESKTOP}_${browserName}`).replace(/ /g, '_')\n    const subFolder = savePerInstance ? instanceName : ''\n    const folderName = join(folder, subFolder)\n\n    ensureDirSync(folderName)\n\n    return folderName\n}\n\n/**\n * Format the filename\n */\nexport function formatFileName(options: FormatFileNameOptions): string {\n    const {\n        browserName = NOT_KNOWN,\n        browserVersion = NOT_KNOWN,\n        deviceName = NOT_KNOWN,\n        devicePixelRatio,\n        isMobile,\n        screenHeight,\n        screenWidth,\n        outerHeight = screenHeight,\n        outerWidth = screenWidth,\n        isTestInBrowser,\n        name,\n        platformName,\n        platformVersion,\n        tag,\n    } = options\n    const defaults: FormatFileDefaults = {\n        browserName,\n        browserVersion,\n        deviceName,\n        dpr: devicePixelRatio,\n        height:isMobile ? screenHeight : outerHeight,\n        logName: options.logName,\n        mobile: isMobile && isTestInBrowser ? browserName  : isMobile ? 'app' : NOT_KNOWN,\n        name: name,\n        platformName,\n        platformVersion,\n        tag,\n        width: isMobile ? screenWidth : outerWidth,\n    }\n\n    let fileName = options.formatImageName\n\n    Object.keys(defaults).forEach((value: string) => {\n        // @ts-ignore\n        // @TODO: Fix this in a proper way\n        fileName = fileName.replace(`{${value}}`, defaults[value])\n    })\n\n    return `${fileName.replace(/ /g, '_')}.png`\n}\n\n/**\n * Checks if it is mobile\n */\nexport function checkIsMobile(platformName: string): boolean {\n    return checkIsAndroid(platformName) || checkIsIos(platformName)\n}\n\n/**\n * Checks if the os is Android\n */\nexport function checkIsAndroid(platformName: string): boolean {\n    return platformName.toLowerCase() === PLATFORMS.ANDROID\n}\n\n/**\n * Checks if the os is IOS\n */\nexport function checkIsIos(platformName: string): boolean {\n    return platformName.toLowerCase() === PLATFORMS.IOS\n}\n\n/**\n * Checks if the test is executed in a browser\n */\nexport function checkTestInBrowser(browserName: string): boolean {\n    return browserName !== ''\n}\n\n/**\n * Checks if the test is executed in a browser on a mobile phone\n */\nexport function checkTestInMobileBrowser(platformName: string, browserName: string): boolean {\n    return checkIsMobile(platformName) && checkTestInBrowser(browserName)\n}\n\n/**\n * Checks if this is a native webscreenshot on android\n */\nexport function checkAndroidNativeWebScreenshot(platformName: string, nativeWebscreenshot: boolean): boolean {\n    return (checkIsAndroid(platformName) && nativeWebscreenshot) || false\n}\n\n/**\n * Checks if this is an Android chromedriver screenshot\n */\nexport function checkAndroidChromeDriverScreenshot(platformName: string, nativeWebScreenshot: boolean): boolean {\n    return checkIsAndroid(platformName) && !checkAndroidNativeWebScreenshot(platformName, nativeWebScreenshot)\n}\n\n/**\n * Get the address bar shadow padding. This is only needed for Android native webscreenshot and iOS\n */\nexport function getAddressBarShadowPadding(options: GetAddressBarShadowPaddingOptions): number {\n    const { platformName, browserName, nativeWebScreenshot, addressBarShadowPadding, addShadowPadding } = options\n    const isTestInMobileBrowser = checkTestInMobileBrowser(platformName, browserName)\n    const isAndroidNativeWebScreenshot = checkAndroidNativeWebScreenshot(platformName, nativeWebScreenshot)\n    const isAndroid = checkIsAndroid(platformName)\n    const isIOS = checkIsIos(platformName)\n\n    return isTestInMobileBrowser && ((isAndroidNativeWebScreenshot && isAndroid) || isIOS) && addShadowPadding\n        ? addressBarShadowPadding\n        : 0\n}\n\n/**\n * Get the tool bar shadow padding. This is only needed for iOS\n */\nexport function getToolBarShadowPadding(options: GetToolBarShadowPaddingOptions): number {\n    const { platformName, browserName, toolBarShadowPadding, addShadowPadding } = options\n\n    return checkTestInMobileBrowser(platformName, browserName) && checkIsIos(platformName) && addShadowPadding\n        ? checkIsIos(platformName)\n            ? // The 9 extra are for iOS home bar for iPhones with a notch or iPads with a home bar\n            toolBarShadowPadding + 9\n            : toolBarShadowPadding\n        : 0\n}\n\n/**\n * Calculate the data based on the device pixel ratio\n */\nexport function calculateDprData<T>(data: T, devicePixelRatio: number): T {\n    // @ts-ignore\n    // @TODO: need to figure this one out\n    Object.keys(data).map((key) => (data[key] = typeof data[key] === 'number' ? Math.round(data[key] * devicePixelRatio) : data[key]))\n\n    return data\n}\n\n/**\n * Wait for an amount of milliseconds\n */\nexport async function waitFor(milliseconds: number): Promise<void> {\n    /* istanbul ignore next */\n    return new Promise((resolve) => setTimeout(() => resolve(), milliseconds))\n}\n\n/**\n * Get the size of a screenshot in pixels without the device pixel ratio\n */\nexport function getScreenshotSize(screenshot: string, devicePixelRation = 1): ScreenshotSize {\n    return {\n        height: Math.round(Buffer.from(screenshot, 'base64').readUInt32BE(20) / devicePixelRation),\n        width: Math.round(Buffer.from(screenshot, 'base64').readUInt32BE(16) / devicePixelRation),\n    }\n}\n\n/**\n * Get the device pixel ratio\n */\nexport function getDevicePixelRatio(screenshot: string, deviceScreenSize: {height:number, width: number}): number {\n    const screenshotSize = getScreenshotSize(screenshot)\n    const devicePixelRatio = screenshotSize.width / deviceScreenSize.width\n\n    return Math.round(devicePixelRatio)\n}\n\n/**\n * Get the iOS bezel image names\n */\nexport function getIosBezelImageNames(normalizedDeviceName: string): { topImageName: string; bottomImageName: string } {\n    let topImageName, bottomImageName\n\n    switch (normalizedDeviceName) {\n    case 'iphonex':\n        topImageName = 'iphonex.iphonexs.iphone11pro-top'\n        bottomImageName = 'iphonex.iphonexs.iphone11pro-bottom'\n        break\n    case 'iphonexs':\n        topImageName = 'iphonex.iphonexs.iphone11pro-top'\n        bottomImageName = 'iphonex.iphonexs.iphone11pro-bottom'\n        break\n    case 'iphonexsmax':\n        topImageName = 'iphonexsmax-top'\n        bottomImageName = 'iphonexsmax-bottom'\n        break\n    case 'iphonexr':\n        topImageName = 'iphonexr.iphone11-top'\n        bottomImageName = 'iphonexr.iphone11-bottom'\n        break\n    case 'iphone11':\n        topImageName = 'iphonexr.iphone11-top'\n        bottomImageName = 'iphonexr.iphone11-bottom'\n        break\n    case 'iphone11pro':\n        topImageName = 'iphonex.iphonexs.iphone11pro-top'\n        bottomImageName = 'iphonex.iphonexs.iphone11pro-bottom'\n        break\n    case 'iphone11promax':\n        topImageName = 'iphone11promax-top'\n        bottomImageName = 'iphone11promax-bottom'\n        break\n    case 'iphone12':\n        topImageName = 'iphone12.iphone12pro-top'\n        bottomImageName = 'iphone12.iphone12pro.iphone13.iphone13pro.iphone14-bottom'\n        break\n    case 'iphone12mini':\n        topImageName = 'iphone12mini-top'\n        bottomImageName = 'iphone12mini.iphone13mini-bottom'\n        break\n    case 'iphone12pro':\n        topImageName = 'iphone12.iphone12pro-top'\n        bottomImageName = 'iphone12.iphone12pro.iphone13.iphone13pro.iphone14-bottom'\n        break\n    case 'iphone12promax':\n        topImageName = 'iphone12promax-top'\n        bottomImageName = 'iphone12promax.iphone13promax.iphone14plus-bottom'\n        break\n    case 'iphone13':\n        topImageName = 'iphone13.iphone13pro.iphone14-top'\n        bottomImageName = 'iphone12.iphone12pro.iphone13.iphone13pro.iphone14-bottom'\n        break\n    case 'iphone13mini':\n        topImageName = 'iphone13mini-top'\n        bottomImageName = 'iphone12mini.iphone13mini-bottom'\n        break\n    case 'iphone13pro':\n        topImageName = 'iphone13.iphone13pro.iphone14-top'\n        bottomImageName = 'iphone12.iphone12pro.iphone13.iphone13pro.iphone14-bottom'\n        break\n    case 'iphone13promax':\n        topImageName = 'iphone13promax.iphone14plus-top'\n        bottomImageName = 'iphone12promax.iphone13promax.iphone14plus-bottom'\n        break\n    case 'iphone14':\n        topImageName = 'iphone13.iphone13pro.iphone14-top'\n        bottomImageName = 'iphone12.iphone12pro.iphone13.iphone13pro.iphone14-bottom'\n        break\n    case 'iphone14plus':\n        topImageName = 'iphone13promax.iphone14plus-top'\n        bottomImageName = 'iphone12promax.iphone13promax.iphone14plus-bottom'\n        break\n    case 'iphone14pro':\n        topImageName = 'iphone14pro-top'\n        bottomImageName = 'iphone14pro-bottom'\n        break\n    case 'iphone14promax':\n        topImageName = 'iphone14promax-top'\n        bottomImageName = 'iphone14promax-bottom'\n        break\n    case 'iphone15':\n        topImageName = 'iphone15-top'\n        bottomImageName = 'iphone15-bottom'\n        break\n        // iPad\n    case 'ipadmini':\n        topImageName = 'ipadmini6th-top'\n        bottomImageName = 'ipadmini6th-bottom'\n        break\n    case 'ipadair':\n        topImageName = 'ipadair4th.ipadair5th-top'\n        bottomImageName = 'ipadair4th.ipadair5th-bottom'\n        break\n    case 'ipadpro11':\n        topImageName = 'ipadpro11-top'\n        bottomImageName = 'ipadpro11-bottom'\n        break\n    case 'ipadpro129':\n        topImageName = 'ipadpro129-top'\n        bottomImageName = 'ipadpro129-bottom'\n        break\n    }\n\n    if (!topImageName || !bottomImageName) {\n        throw new Error(`Could not find iOS bezel images for device ${normalizedDeviceName}`)\n    }\n\n    return { topImageName, bottomImageName }\n}\n\n/**\n * Validate that the item is an object\n */\nexport function isObject(item:unknown) {\n    return (typeof item === 'object' && item !== null) || typeof item === 'function'\n}\n"]}