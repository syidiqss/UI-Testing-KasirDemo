{"version":3,"file":"instanceData.js","sourceRoot":"","sources":["../../src/methods/instanceData.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,gDAU4B;AAC5B,uGAA6E;AAQ7E,SAA8B,uBAAuB,CACjD,QAAkB,EAClB,eAAgC,EAChC,gBAAyB;;;;;wBAGa,WAAM,QAAQ,CAAC,gCAAmB,CAAC,EAAA;;oBAAnE,WAAW,GAAqB,SAAmC;oBACjE,uBAAuB,GAA2E,eAAe,wBAA1F,EAAE,oBAAoB,GAAqD,eAAe,qBAApE,EAAE,WAAW,GAAwC,eAAe,YAAvD,EAAE,mBAAmB,GAAmB,eAAe,oBAAlC,EAAE,YAAY,GAAK,eAAe,aAApB,CAAoB;oBAGnH,SAAS,GAAG,IAAA,yBAAc,EAAC,YAAY,CAAC,CAAA;oBACxC,KAAK,GAAG,IAAA,qBAAU,EAAC,YAAY,CAAC,CAAA;oBAChC,QAAQ,GAAG,IAAA,wBAAa,EAAC,YAAY,CAAC,CAAA;oBACtC,eAAe,GAAG,IAAA,6BAAkB,EAAC,WAAW,CAAC,CAAA;oBACjD,qBAAqB,GAAG,IAAA,mCAAwB,EAAC,YAAY,EAAE,WAAW,CAAC,CAAA;oBAC3E,4BAA4B,GAAG,IAAA,0CAA+B,EAAC,YAAY,EAAE,mBAAmB,CAAC,CAAA;oBACjG,+BAA+B,GAAG,IAAA,6CAAkC,EAAC,YAAY,EAAE,mBAAmB,CAAC,CAAA;oBACvG,iBAAiB,GAAG,IAAA,qCAA0B,EAAC;wBACjD,YAAY,cAAA;wBACZ,WAAW,aAAA;wBACX,mBAAmB,qBAAA;wBACnB,uBAAuB,yBAAA;wBACvB,gBAAgB,kBAAA;qBACnB,CAAC,CAAA;oBACI,cAAc,GAAG,IAAA,kCAAuB,EAAC,EAAE,YAAY,cAAA,EAAE,WAAW,aAAA,EAAE,oBAAoB,sBAAA,EAAE,gBAAgB,kBAAA,EAAE,CAAC,CAAA;oBAGrH,0CACO,WAAW,GACX,eAAe,KAClB,uBAAuB,EAAE,iBAAiB,EAC1C,SAAS,WAAA,EACT,+BAA+B,iCAAA,EAC/B,4BAA4B,8BAAA,EAC5B,KAAK,OAAA,EACL,QAAQ,UAAA,EACR,eAAe,iBAAA,EACf,qBAAqB,uBAAA,EACrB,oBAAoB,EAAE,cAAc,KACvC;;;;CACJ;AAxCD,0CAwCC","sourcesContent":["import {\n    checkIsMobile,\n    checkAndroidChromeDriverScreenshot,\n    checkAndroidNativeWebScreenshot,\n    checkIsAndroid,\n    checkIsIos,\n    checkTestInBrowser,\n    checkTestInMobileBrowser,\n    getAddressBarShadowPadding,\n    getToolBarShadowPadding,\n} from '../helpers/utils.js'\nimport getScreenDimensions from '../clientSideScripts/getScreenDimensions.js'\nimport type { Executor } from './methods.interfaces'\nimport type { EnrichedInstanceData, InstanceOptions } from './instanceData.interfaces'\nimport type { ScreenDimensions } from '../clientSideScripts/screenDimensions.interfaces'\n\n/**\n * Enrich the instance data with more data\n */\nexport default async function getEnrichedInstanceData(\n    executor: Executor,\n    instanceOptions: InstanceOptions,\n    addShadowPadding: boolean,\n): Promise<EnrichedInstanceData> {\n    // Get the current browser data\n    const browserData: ScreenDimensions = await executor(getScreenDimensions)\n    const { addressBarShadowPadding, toolBarShadowPadding, browserName, nativeWebScreenshot, platformName } = instanceOptions\n\n    // Determine some constants\n    const isAndroid = checkIsAndroid(platformName)\n    const isIOS = checkIsIos(platformName)\n    const isMobile = checkIsMobile(platformName)\n    const isTestInBrowser = checkTestInBrowser(browserName)\n    const isTestInMobileBrowser = checkTestInMobileBrowser(platformName, browserName)\n    const isAndroidNativeWebScreenshot = checkAndroidNativeWebScreenshot(platformName, nativeWebScreenshot)\n    const isAndroidChromeDriverScreenshot = checkAndroidChromeDriverScreenshot(platformName, nativeWebScreenshot)\n    const addressBarPadding = getAddressBarShadowPadding({\n        platformName,\n        browserName,\n        nativeWebScreenshot,\n        addressBarShadowPadding,\n        addShadowPadding,\n    })\n    const toolBarPadding = getToolBarShadowPadding({ platformName, browserName, toolBarShadowPadding, addShadowPadding })\n\n    // Return the new instance data object\n    return {\n        ...browserData,\n        ...instanceOptions,\n        addressBarShadowPadding: addressBarPadding,\n        isAndroid,\n        isAndroidChromeDriverScreenshot,\n        isAndroidNativeWebScreenshot,\n        isIOS,\n        isMobile,\n        isTestInBrowser,\n        isTestInMobileBrowser,\n        toolBarShadowPadding: toolBarPadding,\n    }\n}\n"]}