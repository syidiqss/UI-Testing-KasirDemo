import type { ChainablePromiseElement } from 'webdriverio';
import type { ElementRectangles, RectanglesOutput, ScreenRectanglesOptions, StatusAddressToolBarRectangles, StatusAddressToolBarRectanglesOptions } from './rectangles.interfaces';
import type { Executor, GetElementRect } from './methods.interfaces';
import type { CheckScreenMethodOptions } from '../commands/screen.interfaces.js';
import type { InstanceData } from './instanceData.interfaces.js';
export declare function determineElementRectangles({ executor, base64Image, options, element, }: ElementRectangles): Promise<RectanglesOutput>;
export declare function determineScreenRectangles(base64Image: string, options: ScreenRectanglesOptions): RectanglesOutput;
export declare function determineStatusAddressToolBarRectangles(executor: Executor, options: StatusAddressToolBarRectanglesOptions): Promise<StatusAddressToolBarRectangles>;
export declare function isWdioElement(x: unknown): boolean;
export declare function determineIgnoreRegions(ignores: (RectanglesOutput | WebdriverIO.Element | ChainablePromiseElement<WebdriverIO.Element>)[], getElementRect: GetElementRect): Promise<RectanglesOutput[]>;
export declare function determineDeviceBlockOuts({ isAndroid, screenCompareOptions, instanceData }: {
    isAndroid: boolean;
    screenCompareOptions: CheckScreenMethodOptions;
    instanceData: InstanceData;
}): Promise<RectanglesOutput[]>;
//# sourceMappingURL=rectangles.d.ts.map